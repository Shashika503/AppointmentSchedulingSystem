2025-07-22 00:02:41.764 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 00:02:41.968 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 00:02:41.969 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 00:02:42.042 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 00:02:42.043 +05:30 [INF] Hosting environment: Development
2025-07-22 00:02:42.044 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 00:02:42.377 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 00:02:42.536 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 163.8413ms
2025-07-22 00:02:42.541 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 00:02:42.552 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 10.3725ms
2025-07-22 00:02:42.556 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 00:02:42.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.0094ms
2025-07-22 00:02:42.689 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 00:02:42.700 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.3086ms
2025-07-22 00:04:01.546 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:04:01.554 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:04:01.556 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 13.1676ms
2025-07-22 00:04:01.559 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:04:01.565 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:04:02.146 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:04:02.171 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:04:08.123 +05:30 [INF] Executed DbCommand (373ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:04:08.588 +05:30 [INF] Executed DbCommand (335ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:04:08.658 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:04:08.691 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 6514.6428ms
2025-07-22 00:04:08.693 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:04:08.699 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 7140.2492ms
2025-07-22 00:08:29.177 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:08:29.186 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:08:29.187 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 10.7101ms
2025-07-22 00:08:29.188 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:08:29.191 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:08:29.192 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:08:29.193 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:08:31.371 +05:30 [INF] Executed DbCommand (322ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:08:31.708 +05:30 [INF] Executed DbCommand (333ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:08:31.713 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:08:31.714 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2518.9725ms
2025-07-22 00:08:31.716 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:08:31.716 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2528.2974ms
2025-07-22 00:09:35.702 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 00:09:35.860 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 00:09:35.861 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 00:09:35.916 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 00:09:35.917 +05:30 [INF] Hosting environment: Development
2025-07-22 00:09:35.918 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 00:09:36.698 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 00:09:36.855 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 164.2778ms
2025-07-22 00:09:36.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 00:09:36.866 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 7.1948ms
2025-07-22 00:09:36.887 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 00:09:36.911 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 23.8282ms
2025-07-22 00:09:37.051 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 00:09:37.069 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 18.3179ms
2025-07-22 00:09:53.915 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:09:53.924 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:09:53.925 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 10.4989ms
2025-07-22 00:09:53.931 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:09:53.935 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:09:53.971 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:09:53.987 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:09:58.514 +05:30 [INF] Executed DbCommand (350ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:09:58.967 +05:30 [INF] Executed DbCommand (350ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:09:59.004 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:09:59.025 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 5035.4083ms
2025-07-22 00:09:59.028 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:09:59.033 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 5101.6394ms
2025-07-22 00:11:41.004 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:11:41.009 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:11:41.010 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 6.2565ms
2025-07-22 00:11:41.011 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:11:41.013 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:11:41.015 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:11:41.016 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:11:44.031 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:11:44.360 +05:30 [INF] Executed DbCommand (325ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:11:44.362 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:11:44.364 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 3346.7007ms
2025-07-22 00:11:44.364 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:11:44.365 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 3353.9307ms
2025-07-22 00:14:16.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:14:16.994 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:14:16.995 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 7.1509ms
2025-07-22 00:14:17.001 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:14:17.007 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:14:17.009 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:14:17.010 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:14:19.515 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:14:19.853 +05:30 [INF] Executed DbCommand (329ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:14:19.858 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:14:19.859 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2847.4123ms
2025-07-22 00:14:19.860 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:14:19.861 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2860.6873ms
2025-07-22 00:21:25.643 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 00:21:25.910 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 00:21:25.911 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 00:21:25.963 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 00:21:25.964 +05:30 [INF] Hosting environment: Development
2025-07-22 00:21:25.964 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 00:21:26.693 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 00:21:26.856 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 167.3768ms
2025-07-22 00:21:26.860 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 00:21:26.868 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 7.7922ms
2025-07-22 00:21:26.876 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 00:21:26.924 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.3964ms
2025-07-22 00:21:27.011 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 00:21:27.024 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.4411ms
2025-07-22 00:21:30.189 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:21:30.196 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:21:30.198 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 8.8554ms
2025-07-22 00:21:30.200 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:21:30.204 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:21:30.739 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:21:30.762 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:21:36.215 +05:30 [INF] Executed DbCommand (354ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:21:36.701 +05:30 [INF] Executed DbCommand (370ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:21:36.771 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:21:36.793 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 6027.6718ms
2025-07-22 00:21:36.794 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:21:36.800 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 6600.1591ms
2025-07-22 00:21:53.370 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/auth/login - null null
2025-07-22 00:21:53.389 +05:30 [INF] Executing endpoint '405 HTTP Method Not Supported'
2025-07-22 00:21:53.391 +05:30 [INF] Executed endpoint '405 HTTP Method Not Supported'
2025-07-22 00:21:53.392 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/auth/login - 405 0 null 21.4758ms
2025-07-22 00:23:46.922 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:23:46.929 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:23:46.930 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 7.728ms
2025-07-22 00:23:46.931 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:23:46.933 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:23:46.935 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:23:46.936 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:23:49.643 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:23:49.970 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:23:49.972 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:23:49.973 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 3033.8215ms
2025-07-22 00:23:49.974 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:23:49.975 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 3044.2285ms
2025-07-22 00:29:53.561 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:29:53.568 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:29:53.569 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 8.0414ms
2025-07-22 00:29:53.570 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:29:53.573 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:29:53.574 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:29:53.575 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:29:57.250 +05:30 [INF] Executed DbCommand (283ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:29:57.566 +05:30 [INF] Executed DbCommand (313ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:29:57.572 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:29:57.575 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 3998.4518ms
2025-07-22 00:29:57.576 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:29:57.577 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4006.6269ms
2025-07-22 00:30:52.747 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:30:52.754 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:30:52.754 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 8.027ms
2025-07-22 00:30:52.756 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:30:52.758 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:30:52.759 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:30:52.760 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:30:54.473 +05:30 [INF] Executed DbCommand (375ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:30:54.791 +05:30 [INF] Executed DbCommand (314ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:30:54.798 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:30:54.800 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2038.751ms
2025-07-22 00:30:54.801 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:30:54.802 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2047.029ms
2025-07-22 00:32:01.559 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:32:01.561 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:32:01.561 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 2.9588ms
2025-07-22 00:32:01.562 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:32:01.566 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:32:01.567 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:32:01.568 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:32:03.491 +05:30 [INF] Executed DbCommand (291ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:32:03.810 +05:30 [INF] Executed DbCommand (313ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:32:03.817 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:32:03.819 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2250.2558ms
2025-07-22 00:32:03.820 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:32:03.821 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2258.9663ms
2025-07-22 00:36:25.089 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:36:25.094 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:36:25.095 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 6.6397ms
2025-07-22 00:36:25.096 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:36:25.099 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:36:25.100 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:36:25.101 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:36:28.940 +05:30 [INF] Executed DbCommand (288ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:36:29.291 +05:30 [INF] Executed DbCommand (346ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:36:29.294 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:36:29.295 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4193.2386ms
2025-07-22 00:36:29.296 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:36:29.297 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4200.6355ms
2025-07-22 00:37:47.721 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 00:37:47.729 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:37:47.730 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 8.9421ms
2025-07-22 00:37:47.731 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 00:37:47.734 +05:30 [INF] CORS policy execution successful.
2025-07-22 00:37:47.734 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:37:47.735 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 00:37:49.847 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 00:37:50.161 +05:30 [INF] Executed DbCommand (305ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 00:37:50.169 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 00:37:50.172 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2435.4016ms
2025-07-22 00:37:50.173 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 00:37:50.174 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2442.514ms
2025-07-22 07:40:46.143 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 07:40:46.377 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 07:40:46.378 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 07:40:46.515 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 07:40:46.516 +05:30 [INF] Hosting environment: Development
2025-07-22 07:40:46.517 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 07:40:47.896 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 07:40:48.108 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 218.3046ms
2025-07-22 07:40:48.156 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 07:40:48.156 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 07:40:48.173 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 15.8148ms
2025-07-22 07:40:48.228 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.1524ms
2025-07-22 07:40:48.354 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 07:40:48.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.0996ms
2025-07-22 07:41:26.144 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 07:41:26.151 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:41:26.153 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 9.1694ms
2025-07-22 07:41:26.160 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 07:41:26.167 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:41:26.687 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:41:26.715 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 07:41:33.808 +05:30 [INF] Executed DbCommand (366ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 07:41:34.266 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 07:41:34.345 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 07:41:34.373 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 7654.3199ms
2025-07-22 07:41:34.375 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:41:34.380 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 8221.486ms
2025-07-22 07:44:11.327 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 07:44:11.333 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:44:11.334 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 6.4716ms
2025-07-22 07:44:11.335 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 07:44:11.338 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:44:11.340 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:44:11.341 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 07:44:15.636 +05:30 [INF] Executed DbCommand (354ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 07:44:15.954 +05:30 [INF] Executed DbCommand (314ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 07:44:15.958 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 07:44:15.959 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4616.481ms
2025-07-22 07:44:15.960 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:44:15.962 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4626.9251ms
2025-07-22 07:51:31.529 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 07:51:31.536 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:51:31.537 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 8.3869ms
2025-07-22 07:51:31.539 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 07:51:31.541 +05:30 [INF] CORS policy execution successful.
2025-07-22 07:51:31.544 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:51:31.545 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 07:51:35.839 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 07:51:36.183 +05:30 [INF] Executed DbCommand (341ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 07:51:36.189 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 07:51:36.190 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4644.1559ms
2025-07-22 07:51:36.191 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 07:51:36.192 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4653.1245ms
2025-07-22 08:03:22.958 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 08:03:23.009 +05:30 [INF] CORS policy execution successful.
2025-07-22 08:03:23.012 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 59.1812ms
2025-07-22 08:03:23.014 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 08:03:23.017 +05:30 [INF] CORS policy execution successful.
2025-07-22 08:03:23.018 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 08:03:23.019 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 08:03:27.386 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 08:03:27.723 +05:30 [INF] Executed DbCommand (332ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 08:03:27.733 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 08:03:27.738 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4717.434ms
2025-07-22 08:03:27.740 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 08:03:27.743 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4728.4415ms
2025-07-22 09:14:31.373 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 09:14:31.612 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 09:14:31.613 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 09:14:31.677 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 09:14:31.678 +05:30 [INF] Hosting environment: Development
2025-07-22 09:14:31.679 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 09:14:32.154 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 09:14:32.375 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 228.29ms
2025-07-22 09:14:32.383 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 09:14:32.392 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 8.4672ms
2025-07-22 09:14:32.397 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 09:14:32.437 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 40.2319ms
2025-07-22 09:14:32.532 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 09:14:32.546 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.5603ms
2025-07-22 09:14:46.493 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:14:46.501 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:14:46.503 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 10.0819ms
2025-07-22 09:14:46.505 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:14:46.509 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:14:47.088 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:14:47.113 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:14:53.995 +05:30 [INF] Executed DbCommand (347ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:14:54.478 +05:30 [INF] Executed DbCommand (333ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:14:54.551 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:14:54.577 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 7459.6392ms
2025-07-22 09:14:54.579 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:14:54.585 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 8079.8731ms
2025-07-22 09:17:50.133 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:17:50.156 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:17:50.162 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 126.247ms
2025-07-22 09:17:50.164 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:17:50.170 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:17:50.182 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:17:50.188 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:17:54.122 +05:30 [INF] Executed DbCommand (293ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:17:54.457 +05:30 [INF] Executed DbCommand (319ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:17:54.464 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:17:54.469 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4279.0057ms
2025-07-22 09:17:54.470 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:17:54.472 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4308.4097ms
2025-07-22 09:20:26.458 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:20:26.466 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:20:26.468 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 17.756ms
2025-07-22 09:20:26.473 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 43
2025-07-22 09:20:26.476 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:20:26.487 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:20:26.488 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:20:28.460 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:20:28.466 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2025-07-22 09:20:28.469 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 1977.4583ms
2025-07-22 09:20:28.470 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:20:28.471 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 401 null text/plain; charset=utf-8 1998.9268ms
2025-07-22 09:20:40.867 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:20:40.870 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:20:40.872 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 5.4979ms
2025-07-22 09:20:40.872 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:20:40.876 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:20:40.877 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:20:40.878 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:20:42.837 +05:30 [INF] Executed DbCommand (353ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:20:43.177 +05:30 [INF] Executed DbCommand (335ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:20:43.182 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:20:43.183 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2303.9163ms
2025-07-22 09:20:43.185 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:20:43.186 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2313.8972ms
2025-07-22 09:23:23.782 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:23:23.792 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:23:23.795 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 15.3501ms
2025-07-22 09:23:23.796 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:23:23.802 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:23:23.805 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:23:23.808 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:23:26.527 +05:30 [INF] Executed DbCommand (301ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:23:26.888 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:23:26.895 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:23:26.900 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 3090.2126ms
2025-07-22 09:23:26.901 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:23:26.903 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 3107.0464ms
2025-07-22 09:26:18.136 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:26:18.146 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:26:18.149 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 15.197ms
2025-07-22 09:26:18.151 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:26:18.157 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:26:18.162 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:26:18.170 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:26:20.541 +05:30 [INF] Executed DbCommand (351ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:26:20.867 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:26:20.873 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:26:20.875 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2702.863ms
2025-07-22 09:26:20.877 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:26:20.879 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2727.7671ms
2025-07-22 09:29:17.834 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 09:29:17.841 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:29:17.843 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 96.9498ms
2025-07-22 09:29:17.849 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 09:29:17.851 +05:30 [INF] CORS policy execution successful.
2025-07-22 09:29:17.854 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:29:17.856 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 09:29:19.953 +05:30 [INF] Executed DbCommand (339ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 09:29:20.291 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 09:29:20.299 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 09:29:20.302 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2444.3285ms
2025-07-22 09:29:20.303 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 09:29:20.305 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2456.389ms
2025-07-22 09:31:03.387 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/auth/login/login - null null
2025-07-22 09:31:03.487 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/auth/login/login - 404 0 null 101.351ms
2025-07-22 09:31:03.493 +05:30 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7264/api/auth/login/login, Response status code: 404
2025-07-22 11:53:19.411 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 11:53:19.731 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 11:53:19.732 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 11:53:19.854 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 11:53:19.856 +05:30 [INF] Hosting environment: Development
2025-07-22 11:53:19.857 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 11:53:21.060 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 11:53:21.272 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 220.1129ms
2025-07-22 11:53:21.309 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 11:53:21.309 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 11:53:21.341 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 32.1327ms
2025-07-22 11:53:21.496 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 187.1259ms
2025-07-22 11:53:21.599 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 11:53:21.613 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 14.8281ms
2025-07-22 13:26:57.628 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 13:26:57.703 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:26:57.709 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 86.3615ms
2025-07-22 13:26:57.713 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 13:26:57.721 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:26:58.891 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:26:58.969 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 13:27:09.607 +05:30 [INF] Executed DbCommand (425ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 13:27:10.068 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 13:27:10.170 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 13:27:10.200 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 11227.5444ms
2025-07-22 13:27:10.202 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:27:10.208 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 12494.5629ms
2025-07-22 13:29:01.974 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 13:29:02.009 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:29:02.018 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 50.6331ms
2025-07-22 13:29:02.019 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 13:29:02.030 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:29:02.054 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:29:02.071 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 13:29:06.762 +05:30 [INF] Executed DbCommand (326ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 13:29:07.142 +05:30 [INF] Executed DbCommand (356ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 13:29:07.155 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 13:29:07.161 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 5086.0935ms
2025-07-22 13:29:07.162 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:29:07.163 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 5144.4367ms
2025-07-22 13:33:13.800 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 13:33:13.825 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:33:13.830 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 13:33:13.832 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 32.0229ms
2025-07-22 13:33:13.838 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:33:13.864 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:33:13.878 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 13:33:18.221 +05:30 [INF] Executed DbCommand (344ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 13:33:18.553 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 13:33:18.562 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 13:33:18.567 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4682.9691ms
2025-07-22 13:33:18.569 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:33:18.570 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4741.1169ms
2025-07-22 13:41:50.310 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 13:41:50.340 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:41:50.343 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 38.6258ms
2025-07-22 13:41:50.345 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 13:41:50.350 +05:30 [INF] CORS policy execution successful.
2025-07-22 13:41:50.364 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:41:50.374 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 13:41:55.196 +05:30 [INF] Executed DbCommand (317ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 13:41:55.556 +05:30 [INF] Executed DbCommand (345ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 13:41:55.566 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 13:41:55.571 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 5194.1853ms
2025-07-22 13:41:55.573 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 13:41:55.574 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 5229.2211ms
2025-07-22 14:35:34.708 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 14:35:34.921 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 14:35:34.922 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 14:35:35.035 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 14:35:35.036 +05:30 [INF] Hosting environment: Development
2025-07-22 14:35:35.037 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 14:35:36.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 14:35:36.265 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 196.3485ms
2025-07-22 14:35:36.284 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 14:35:36.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 14:35:36.294 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 9.4663ms
2025-07-22 14:35:36.355 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 67.3078ms
2025-07-22 14:35:36.449 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 14:35:36.463 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 14.8443ms
2025-07-22 18:43:40.105 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 18:43:40.306 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 18:43:40.308 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 18:43:40.426 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 18:43:40.427 +05:30 [INF] Hosting environment: Development
2025-07-22 18:43:40.428 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 18:43:41.554 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 18:43:41.761 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 217.393ms
2025-07-22 18:43:41.814 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 18:43:41.814 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 18:43:41.823 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 9.6834ms
2025-07-22 18:43:41.990 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 175.6743ms
2025-07-22 18:43:42.078 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 18:43:42.093 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.8969ms
2025-07-22 18:47:13.873 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 18:47:13.893 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:47:13.896 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 24.7899ms
2025-07-22 18:47:13.899 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 37
2025-07-22 18:47:13.904 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:47:14.530 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:47:14.566 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 18:47:21.247 +05:30 [INF] Executed DbCommand (366ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 18:47:21.267 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2025-07-22 18:47:21.274 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 6702.8732ms
2025-07-22 18:47:21.275 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:47:21.280 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 401 null text/plain; charset=utf-8 7381.6827ms
2025-07-22 18:47:33.409 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 18:47:33.412 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:47:33.413 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 4.2091ms
2025-07-22 18:47:33.415 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 18:47:33.417 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:47:33.418 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:47:33.420 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 18:47:35.273 +05:30 [INF] Executed DbCommand (326ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 18:47:35.732 +05:30 [INF] Executed DbCommand (334ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 18:47:35.808 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 18:47:35.836 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2414.3283ms
2025-07-22 18:47:35.837 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:47:35.838 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2423.7859ms
2025-07-22 18:48:10.496 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 18:48:10.504 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:48:10.505 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 9.9986ms
2025-07-22 18:48:10.506 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 45
2025-07-22 18:48:10.508 +05:30 [INF] CORS policy execution successful.
2025-07-22 18:48:10.510 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:48:10.511 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 18:48:13.012 +05:30 [INF] Executed DbCommand (397ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 18:48:13.334 +05:30 [INF] Executed DbCommand (317ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 18:48:13.343 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 18:48:13.345 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2832.6267ms
2025-07-22 18:48:13.346 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 18:48:13.347 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 551 application/json; charset=utf-8 2840.9817ms
2025-07-22 19:21:47.184 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 19:21:47.197 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:21:47.200 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 17.7122ms
2025-07-22 19:21:47.200 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 19:21:47.206 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:21:47.211 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 19:21:47.217 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 19:21:51.498 +05:30 [INF] Executed DbCommand (321ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 19:21:51.855 +05:30 [INF] Executed DbCommand (336ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 19:21:51.868 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 19:21:51.870 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 4652.1276ms
2025-07-22 19:21:51.873 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 19:21:51.875 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 4674.9922ms
2025-07-22 19:24:48.442 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 19:24:48.481 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:48.484 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 43.5969ms
2025-07-22 19:24:48.526 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 130
2025-07-22 19:24:48.532 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:48.624 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 19:24:48.651 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:24:51.940 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 19:24:51.945 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:24:51.952 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 3298.6295ms
2025-07-22 19:24:51.953 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 19:24:51.955 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 188 application/json; charset=utf-8 3428.4295ms
2025-07-22 19:24:51.964 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:24:51.964 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:24:51.966 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:51.968 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:51.968 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 4.3187ms
2025-07-22 19:24:51.969 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 4.695ms
2025-07-22 19:24:51.973 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:24:51.973 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:24:51.983 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:51.983 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:24:51.986 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:24:51.986 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:24:51.991 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:24:51.993 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:24:52.339 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:24:52.350 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:24:52.355 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 363.2904ms
2025-07-22 19:24:52.356 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:24:52.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 384.3789ms
2025-07-22 19:24:54.468 +05:30 [INF] Executed DbCommand (354ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:24:54.509 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:24:54.514 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 2519.4899ms
2025-07-22 19:24:54.515 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:24:54.517 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 2543.4871ms
2025-07-22 19:29:44.804 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:29:44.826 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:29:44.826 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:29:44.832 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:29:44.837 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.838 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.842 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 39.1465ms
2025-07-22 19:29:44.844 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 17.436ms
2025-07-22 19:29:44.840 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.842 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.848 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:29:44.857 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 30.2417ms
2025-07-22 19:29:44.857 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 25.032ms
2025-07-22 19:29:44.859 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:29:44.868 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:44.868 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:29:44.869 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:29:44.870 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:29:44.870 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:29:46.965 +05:30 [INF] Executed DbCommand (321ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:29:46.979 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:29:46.983 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2110.514ms
2025-07-22 19:29:46.985 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:29:46.985 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:29:46.987 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:46.988 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 2140.1707ms
2025-07-22 19:29:46.989 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:29:46.991 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:29:47.342 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:29:47.347 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:29:47.350 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 357.4884ms
2025-07-22 19:29:47.351 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:29:47.352 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 366.9599ms
2025-07-22 19:29:48.611 +05:30 [INF] Executed DbCommand (329ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:29:48.613 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:29:48.614 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 3740.0616ms
2025-07-22 19:29:48.615 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:29:48.616 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:29:48.616 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 3758.0684ms
2025-07-22 19:29:48.619 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:29:48.621 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:29:48.622 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:29:48.962 +05:30 [INF] Executed DbCommand (339ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:29:48.970 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:29:48.973 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 349.5807ms
2025-07-22 19:29:48.976 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:29:48.978 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 362.0206ms
2025-07-22 19:45:14.050 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:45:14.050 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:45:14.050 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:45:14.050 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:45:14.057 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.058 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.062 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 12.1476ms
2025-07-22 19:45:14.063 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 12.8734ms
2025-07-22 19:45:14.060 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.061 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.067 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:45:14.067 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:45:14.075 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 24.9857ms
2025-07-22 19:45:14.076 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 25.8685ms
2025-07-22 19:45:14.077 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.079 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:14.083 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:45:14.084 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:45:14.084 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:45:14.085 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:45:17.280 +05:30 [INF] Executed DbCommand (1,304ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:45:17.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:45:17.284 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 3196.641ms
2025-07-22 19:45:17.285 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:45:17.285 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:45:17.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 3218.3511ms
2025-07-22 19:45:17.288 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:17.291 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:45:17.291 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:45:18.706 +05:30 [INF] Executed DbCommand (1,413ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:45:18.713 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:45:18.718 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 1425.296ms
2025-07-22 19:45:18.719 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:45:18.720 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 1435.3102ms
2025-07-22 19:45:20.009 +05:30 [INF] Executed DbCommand (300ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:45:20.012 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:45:20.016 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 5930.3356ms
2025-07-22 19:45:20.018 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:45:20.018 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:45:20.019 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 5951.5092ms
2025-07-22 19:45:20.022 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:20.024 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:45:20.025 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:45:20.327 +05:30 [INF] Executed DbCommand (301ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:45:20.330 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:45:20.331 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 304.5359ms
2025-07-22 19:45:20.332 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:45:20.333 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 314.4569ms
2025-07-22 19:45:32.893 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:45:32.899 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:32.900 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 7.4744ms
2025-07-22 19:45:32.901 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:45:32.904 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:32.905 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:45:32.912 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:45:37.195 +05:30 [INF] Executed DbCommand (423ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:45:37.283 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 4370.1817ms
2025-07-22 19:45:37.284 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:45:37.288 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TimeSlot.TimeSlotId' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(IProperty property, Boolean changeState, Boolean isModified, Boolean isConceptualNull, Boolean acceptChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectValueChange(InternalEntityEntry entry, IProperty property)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)
   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.EditTimeSlot(Int32 id, TimeSlotDto timeSlotDto) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 86
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 19:45:37.396 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 500 null text/plain; charset=utf-8 4495.6042ms
2025-07-22 19:45:46.581 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:45:46.583 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:46.584 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 2.7846ms
2025-07-22 19:45:46.585 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:45:46.587 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:45:46.588 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:45:46.589 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:46:06.364 +05:30 [INF] Executed DbCommand (304ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:46:16.865 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 30274.1963ms
2025-07-22 19:46:16.866 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:46:16.867 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TimeSlot.TimeSlotId' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(IProperty property, Boolean changeState, Boolean isModified, Boolean isConceptualNull, Boolean acceptChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectValueChange(InternalEntityEntry entry, IProperty property)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)
   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.EditTimeSlot(Int32 id, TimeSlotDto timeSlotDto) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 86
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 19:46:16.873 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 500 null text/plain; charset=utf-8 30288.0734ms
2025-07-22 19:46:22.759 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:46:22.762 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:46:22.762 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 2.9761ms
2025-07-22 19:46:22.763 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:46:22.767 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:46:22.768 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:46:22.768 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:46:27.831 +05:30 [INF] Executed DbCommand (339ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:46:33.318 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 10547.7797ms
2025-07-22 19:46:33.319 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:46:33.321 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TimeSlot.TimeSlotId' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(IProperty property, Boolean changeState, Boolean isModified, Boolean isConceptualNull, Boolean acceptChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectValueChange(InternalEntityEntry entry, IProperty property)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)
   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.EditTimeSlot(Int32 id, TimeSlotDto timeSlotDto) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 86
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 19:46:36.223 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 500 null text/plain; charset=utf-8 13459.2497ms
2025-07-22 19:46:57.059 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:46:57.062 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:46:57.062 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 4.0219ms
2025-07-22 19:46:57.064 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:46:57.067 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:46:57.068 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:46:57.068 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:47:12.928 +05:30 [INF] Executed DbCommand (319ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:52:27.984 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:52:27.988 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 330917.9099ms
2025-07-22 19:52:27.997 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:27.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:52:27.999 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:52:27.999 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:52:28.000 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 499 null null 15.968ms
2025-07-22 19:52:28.001 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:28.003 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:28.004 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TimeSlot.TimeSlotId' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(IProperty property, Boolean changeState, Boolean isModified, Boolean isConceptualNull, Boolean acceptChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectValueChange(InternalEntityEntry entry, IProperty property)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)
   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.EditTimeSlot(Int32 id, TimeSlotDto timeSlotDto) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 86
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 19:52:28.006 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 499 null null 18.6925ms
2025-07-22 19:52:28.007 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 8.2697ms
2025-07-22 19:52:28.009 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:52:28.012 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 500 null text/plain; charset=utf-8 330947.9492ms
2025-07-22 19:52:28.016 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:28.018 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:52:28.019 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:52:33.011 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:52:33.042 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 5021.9309ms
2025-07-22 19:52:33.043 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:52:33.045 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The property 'TimeSlot.TimeSlotId' is part of a key and so cannot be modified or marked as modified. To change the principal of an existing entity with an identifying foreign key, first delete the dependent and invoke 'SaveChanges', and then associate the dependent with the new principal.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(IProperty property, Boolean changeState, Boolean isModified, Boolean isConceptualNull, Boolean acceptChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectValueChange(InternalEntityEntry entry, IProperty property)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.LocalDetectChanges(InternalEntityEntry entry)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(IStateManager stateManager)
   at Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.TryDetectChanges()
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.EditTimeSlot(Int32 id, TimeSlotDto timeSlotDto) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 86
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 19:52:33.051 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 500 null text/plain; charset=utf-8 5042.4277ms
2025-07-22 19:52:45.332 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:52:45.334 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:45.335 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 3.4396ms
2025-07-22 19:52:45.336 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:52:45.339 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:52:45.340 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:52:45.341 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:53:59.693 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 19:53:59.917 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 19:53:59.918 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 19:53:59.971 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 19:53:59.972 +05:30 [INF] Hosting environment: Development
2025-07-22 19:53:59.973 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 19:54:01.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 19:54:01.225 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 205.3346ms
2025-07-22 19:54:01.239 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 19:54:01.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 19:54:01.248 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 9.0384ms
2025-07-22 19:54:01.284 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.1624ms
2025-07-22 19:54:01.378 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 19:54:01.393 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 15.3274ms
2025-07-22 19:54:18.010 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:18.010 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:18.010 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:18.010 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:18.024 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.024 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.025 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.025 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.027 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 17.1401ms
2025-07-22 19:54:18.027 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 17.1407ms
2025-07-22 19:54:18.027 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 17.1406ms
2025-07-22 19:54:18.027 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 17.6315ms
2025-07-22 19:54:18.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:18.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:18.053 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.053 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:18.804 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:18.804 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:18.826 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:18.826 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:22.481 +05:30 [INF] Executed DbCommand (340ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:54:22.546 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:22.616 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:22.617 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 3785.902ms
2025-07-22 19:54:22.619 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:22.620 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:22.623 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:22.624 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:22.624 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 4590.1581ms
2025-07-22 19:54:22.993 +05:30 [INF] Executed DbCommand (322ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:54:22.996 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:22.997 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 371.7612ms
2025-07-22 19:54:22.998 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:22.998 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 382.6438ms
2025-07-22 19:54:24.052 +05:30 [INF] Executed DbCommand (319ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:54:24.093 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:24.099 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 5271.7249ms
2025-07-22 19:54:24.100 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:24.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:24.102 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 6068.3058ms
2025-07-22 19:54:24.104 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:24.106 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:24.107 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:24.424 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:54:24.427 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:24.428 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 319.6916ms
2025-07-22 19:54:24.429 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:24.430 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 328.3177ms
2025-07-22 19:54:50.004 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - null null
2025-07-22 19:54:50.006 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:50.007 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/7 - 204 null null 4.2576ms
2025-07-22 19:54:50.008 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - application/json 130
2025-07-22 19:54:50.011 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:50.012 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:54:50.022 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:54.778 +05:30 [INF] Executed DbCommand (662ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 19:54:55.551 +05:30 [INF] Executed DbCommand (707ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [StartTime] = @p2
OUTPUT 1
WHERE [TimeSlotId] = @p3;
2025-07-22 19:54:55.561 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 19:54:55.562 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 5538.6965ms
2025-07-22 19:54:55.563 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 19:54:55.563 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/7 - 200 null text/plain; charset=utf-8 5555.2272ms
2025-07-22 19:54:55.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:55.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:55.573 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:55.574 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:55.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.6786ms
2025-07-22 19:54:55.575 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.759ms
2025-07-22 19:54:55.577 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 19:54:55.576 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 19:54:55.585 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:55.586 +05:30 [INF] CORS policy execution successful.
2025-07-22 19:54:55.587 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:55.587 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:55.588 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:55.589 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 19:54:56.200 +05:30 [INF] Executed DbCommand (608ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 19:54:56.200 +05:30 [INF] Executed DbCommand (610ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 19:54:56.211 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:56.216 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 19:54:56.218 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 627.0915ms
2025-07-22 19:54:56.220 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 629.8376ms
2025-07-22 19:54:56.220 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 19:54:56.221 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 19:54:56.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 646.5925ms
2025-07-22 19:54:56.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 646.8447ms
2025-07-22 20:02:41.123 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:02:41.129 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:02:41.130 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:02:41.138 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:02:41.144 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.146 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.151 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 28.9445ms
2025-07-22 20:02:41.155 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 25.2383ms
2025-07-22 20:02:41.149 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.150 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.157 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:02:41.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 35.9956ms
2025-07-22 20:02:41.168 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:02:41.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 29.3354ms
2025-07-22 20:02:41.168 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.176 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:41.179 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:02:41.179 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:02:41.180 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:02:41.181 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:02:43.647 +05:30 [INF] Executed DbCommand (288ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:02:43.649 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:02:43.651 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2468.1484ms
2025-07-22 20:02:43.652 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:02:43.653 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:02:43.653 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 2496.6687ms
2025-07-22 20:02:43.655 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:43.658 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:02:43.659 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:02:43.938 +05:30 [INF] Executed DbCommand (277ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:02:43.943 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:02:43.946 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 285.4187ms
2025-07-22 20:02:43.948 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:02:43.949 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 296.4367ms
2025-07-22 20:02:45.253 +05:30 [INF] Executed DbCommand (355ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:02:45.264 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:02:45.267 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 4082.4755ms
2025-07-22 20:02:45.269 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:02:45.269 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:02:45.270 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 4102.8602ms
2025-07-22 20:02:45.273 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:02:45.276 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:02:45.276 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:02:45.632 +05:30 [INF] Executed DbCommand (353ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:02:45.634 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:02:45.635 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 357.2409ms
2025-07-22 20:02:45.636 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:02:45.637 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 367.6708ms
2025-07-22 20:08:41.849 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:08:41.854 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:08:41.855 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:08:41.862 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:08:41.867 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.868 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 24.6524ms
2025-07-22 20:08:41.878 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 22.7032ms
2025-07-22 20:08:41.870 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.872 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:08:41.897 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 42.126ms
2025-07-22 20:08:41.898 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 36.593ms
2025-07-22 20:08:41.899 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.902 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:08:41.907 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:08:41.908 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:41.909 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:08:41.909 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:08:41.910 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:08:42.235 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:08:42.235 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:08:42.243 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:08:42.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:08:42.246 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 336.2826ms
2025-07-22 20:08:42.247 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:08:42.247 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 336.4027ms
2025-07-22 20:08:42.248 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:08:42.248 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:08:42.251 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:42.252 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:08:42.253 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:08:42.254 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 374.3186ms
2025-07-22 20:08:42.255 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:08:42.256 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 354.3545ms
2025-07-22 20:08:42.257 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:08:42.261 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:08:42.263 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:08:42.576 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:08:42.578 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:08:42.579 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 315.2303ms
2025-07-22 20:08:42.580 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:08:42.581 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 333.6158ms
2025-07-22 20:08:42.594 +05:30 [INF] Executed DbCommand (328ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:08:42.596 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:08:42.598 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 331.8158ms
2025-07-22 20:08:42.599 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:08:42.599 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 351.4655ms
2025-07-22 20:15:57.230 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:15:57.235 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:15:57.235 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:15:57.241 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:15:57.247 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.249 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.254 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 24.9938ms
2025-07-22 20:15:57.261 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 25.9154ms
2025-07-22 20:15:57.251 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.253 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.261 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:15:57.269 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 34.1419ms
2025-07-22 20:15:57.269 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 28.2323ms
2025-07-22 20:15:57.270 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:15:57.272 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.277 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:15:57.278 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:15:57.279 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:15:57.279 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:15:57.280 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:00.329 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:16:00.336 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:00.339 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 3057.8853ms
2025-07-22 20:16:00.344 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:16:00.345 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:00.348 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:00.349 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 3087.635ms
2025-07-22 20:16:00.350 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:00.352 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:00.654 +05:30 [INF] Executed DbCommand (300ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:16:00.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:00.667 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 313.7845ms
2025-07-22 20:16:00.670 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:00.673 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 329.365ms
2025-07-22 20:16:01.928 +05:30 [INF] Executed DbCommand (321ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:16:01.939 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:01.942 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 4659.5134ms
2025-07-22 20:16:01.944 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:01.944 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:16:01.945 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 4674.6948ms
2025-07-22 20:16:01.946 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:01.949 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:01.950 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:02.279 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:16:02.283 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:02.284 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 333.0805ms
2025-07-22 20:16:02.285 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:02.286 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 342.1663ms
2025-07-22 20:16:50.842 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:16:50.849 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:16:50.846 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:16:50.849 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:16:50.855 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.857 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.861 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 19.6066ms
2025-07-22 20:16:50.862 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 13.7764ms
2025-07-22 20:16:50.859 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.861 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.867 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:16:50.867 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:16:50.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 29.5813ms
2025-07-22 20:16:50.876 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 27.0616ms
2025-07-22 20:16:50.878 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.880 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:50.886 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:50.887 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:50.887 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:50.888 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:51.194 +05:30 [INF] Executed DbCommand (303ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:16:51.194 +05:30 [INF] Executed DbCommand (300ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:16:51.204 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:51.209 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:51.210 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 320.7364ms
2025-07-22 20:16:51.215 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:16:51.212 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:16:51.212 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 320.0004ms
2025-07-22 20:16:51.215 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:51.217 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:51.220 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:16:51.221 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:51.221 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 354.9105ms
2025-07-22 20:16:51.222 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:51.223 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:51.223 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 356.6422ms
2025-07-22 20:16:51.226 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:51.227 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:16:51.539 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:16:51.542 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:16:51.549 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:51.554 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:16:51.556 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 325.6236ms
2025-07-22 20:16:51.560 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 328.0704ms
2025-07-22 20:16:51.561 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:16:51.562 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:16:51.562 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 347.7728ms
2025-07-22 20:16:51.563 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 350.7264ms
2025-07-22 20:17:36.428 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:17:36.433 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:17:36.440 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.433 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:17:36.447 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 19.3426ms
2025-07-22 20:17:36.446 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.441 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:17:36.453 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:17:36.458 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.461 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 27.4916ms
2025-07-22 20:17:36.465 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 31.6755ms
2025-07-22 20:17:36.468 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:17:36.463 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.465 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.473 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.473 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 33.5587ms
2025-07-22 20:17:36.474 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:17:36.475 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:17:36.477 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:17:36.478 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:17:36.788 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:17:36.789 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:17:36.791 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:17:36.793 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:17:36.793 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 314.4796ms
2025-07-22 20:17:36.794 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:17:36.794 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 313.9974ms
2025-07-22 20:17:36.795 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:17:36.795 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:17:36.797 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.798 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:17:36.799 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:17:36.800 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 346.6773ms
2025-07-22 20:17:36.801 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:17:36.801 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 333.2579ms
2025-07-22 20:17:36.802 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:17:36.804 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:17:36.807 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:17:37.139 +05:30 [INF] Executed DbCommand (330ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:17:37.143 +05:30 [INF] Executed DbCommand (332ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:17:37.144 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:17:37.148 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:17:37.149 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 341.4237ms
2025-07-22 20:17:37.151 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 341.1179ms
2025-07-22 20:17:37.152 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:17:37.152 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:17:37.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 358.8345ms
2025-07-22 20:17:37.154 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 358.6599ms
2025-07-22 20:19:09.031 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/7 - null null
2025-07-22 20:19:09.039 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:19:09.040 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/7 - 204 null null 8.6343ms
2025-07-22 20:19:09.045 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/7 - null null
2025-07-22 20:19:09.050 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:19:09.051 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 20:19:09.057 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:19:14.390 +05:30 [INF] Executed DbCommand (329ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 20:19:16.132 +05:30 [INF] Executed DbCommand (510ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 20:19:16.160 +05:30 [ERR] An exception occurred in the database while saving changes for context type 'wellness_studio_Infrastructure.Data.AppDbContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-07-22 20:19:16.209 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 7151.0759ms
2025-07-22 20:19:16.210 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 20:19:16.213 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.DeleteTimeSlot(Int32 id) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 103
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 20:19:16.246 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/7 - 500 null text/plain; charset=utf-8 7204.0243ms
2025-07-22 20:19:54.473 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/7 - null null
2025-07-22 20:19:54.508 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:19:54.509 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/7 - 204 null null 36.1271ms
2025-07-22 20:19:54.513 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/7 - null null
2025-07-22 20:19:54.518 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:19:54.518 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 20:19:54.519 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:20:00.290 +05:30 [INF] Executed DbCommand (320ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 20:23:17.438 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 20:23:17.624 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 20:23:17.625 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 20:23:17.739 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 20:23:17.740 +05:30 [INF] Hosting environment: Development
2025-07-22 20:23:17.741 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 20:23:18.203 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 20:23:18.369 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 170.0975ms
2025-07-22 20:23:18.379 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 20:23:18.393 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 20:23:18.395 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 16.022ms
2025-07-22 20:23:18.440 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 47.3429ms
2025-07-22 20:23:18.539 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 20:23:18.550 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 11.199ms
2025-07-22 20:23:33.559 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:23:33.559 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:23:33.567 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:33.567 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:33.569 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 10.1204ms
2025-07-22 20:23:33.577 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:23:33.569 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.1213ms
2025-07-22 20:23:33.576 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:23:33.586 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:33.587 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:34.175 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:23:34.175 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:23:34.195 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:23:34.195 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:23:38.022 +05:30 [INF] Executed DbCommand (351ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:23:38.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:23:38.111 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:23:38.112 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 3913.4952ms
2025-07-22 20:23:38.114 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:38.115 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:23:38.118 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:23:38.118 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:23:38.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 4544.1953ms
2025-07-22 20:23:38.540 +05:30 [INF] Executed DbCommand (377ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:23:38.543 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:23:38.545 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 424.9506ms
2025-07-22 20:23:38.546 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:23:38.547 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 436.0029ms
2025-07-22 20:23:39.608 +05:30 [INF] Executed DbCommand (333ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:23:39.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:23:39.672 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 5475.1186ms
2025-07-22 20:23:39.673 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:23:39.675 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:23:39.675 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 6098.8912ms
2025-07-22 20:23:39.677 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:23:39.680 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:23:39.682 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:23:39.995 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:23:39.998 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:23:39.999 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 315.7561ms
2025-07-22 20:23:40.000 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:23:40.001 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 326.3535ms
2025-07-22 20:24:53.450 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 20:24:53.453 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:24:53.454 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 4.2287ms
2025-07-22 20:24:53.456 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 130
2025-07-22 20:24:53.459 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:24:53.460 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 20:24:53.469 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:24:53.534 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 20:24:53.550 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 79.4424ms
2025-07-22 20:24:53.552 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 20:24:53.553 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 347 application/problem+json; charset=utf-8 97.0908ms
2025-07-22 20:25:47.585 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 20:25:47.594 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:47.596 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 15.0523ms
2025-07-22 20:25:47.598 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 130
2025-07-22 20:25:47.602 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:47.603 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 20:25:47.604 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:25:49.623 +05:30 [INF] Executed DbCommand (381ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 20:25:49.647 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:25:49.652 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 2046.2286ms
2025-07-22 20:25:49.653 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 20:25:49.654 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 188 application/json; charset=utf-8 2056.2045ms
2025-07-22 20:25:53.681 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:25:53.681 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:25:53.685 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:53.687 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:53.688 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 7.601ms
2025-07-22 20:25:53.692 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:25:53.693 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:25:53.689 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.8869ms
2025-07-22 20:25:53.699 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:53.701 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:25:53.704 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:25:53.704 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:25:53.704 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:25:53.705 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:25:54.055 +05:30 [INF] Executed DbCommand (347ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:25:54.058 +05:30 [INF] Executed DbCommand (348ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:25:54.067 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:25:54.076 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:25:54.082 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 376.154ms
2025-07-22 20:25:54.083 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 375.6962ms
2025-07-22 20:25:54.086 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:25:54.088 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:25:54.090 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 398.5737ms
2025-07-22 20:25:54.092 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 398.579ms
2025-07-22 20:26:41.662 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:26:41.673 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:26:41.674 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 13.2003ms
2025-07-22 20:26:41.676 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:26:41.679 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:26:41.681 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:26:41.685 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:26:41.689 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 20:26:41.691 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 4.239ms
2025-07-22 20:26:41.692 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:26:41.693 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 400 273 application/problem+json; charset=utf-8 16.8255ms
2025-07-22 20:26:51.117 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:26:51.120 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:26:51.121 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 4.4189ms
2025-07-22 20:26:51.123 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:26:51.126 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:26:51.128 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:56:51 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:26:51.152 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:56:51 PM'.
2025-07-22 20:26:51.153 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:26:51.157 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:26:51.158 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 35.3151ms
2025-07-22 20:27:02.378 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:27:02.382 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:27:02.383 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 4.5576ms
2025-07-22 20:27:02.384 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:27:02.389 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:27:02.391 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:57:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:27:02.393 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:57:02 PM'.
2025-07-22 20:27:02.394 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:27:02.395 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:27:02.397 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 13.0804ms
2025-07-22 20:27:23.159 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:27:23.167 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:27:23.167 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 8.7598ms
2025-07-22 20:27:23.169 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:27:23.172 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:27:23.174 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:57:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:27:23.176 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:57:23 PM'.
2025-07-22 20:27:23.176 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:27:23.177 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:27:23.178 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 9.2233ms
2025-07-22 20:28:34.228 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:28:34.235 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:28:34.236 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 8.2929ms
2025-07-22 20:28:34.239 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:28:34.262 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:28:34.264 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:58:34 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:28:34.266 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:58:34 PM'.
2025-07-22 20:28:34.268 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:28:34.268 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:28:34.269 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 30.686ms
2025-07-22 20:28:55.494 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 20:28:55.681 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 20:28:55.683 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 20:28:55.739 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 20:28:55.740 +05:30 [INF] Hosting environment: Development
2025-07-22 20:28:55.741 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 20:28:56.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 20:28:56.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 141.2007ms
2025-07-22 20:28:56.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 20:28:56.295 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 7.3752ms
2025-07-22 20:28:56.301 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 20:28:56.329 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 27.843ms
2025-07-22 20:28:56.418 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 20:28:56.430 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 12.3531ms
2025-07-22 20:29:05.795 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:29:05.810 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:29:05.812 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 17.2202ms
2025-07-22 20:29:05.814 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:29:05.819 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:29:05.905 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:59:05 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:29:05.934 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:59:05 PM'.
2025-07-22 20:29:05.938 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:29:05.942 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:29:05.943 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 128.8718ms
2025-07-22 20:29:44.190 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:29:44.194 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:29:44.195 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 5.0521ms
2025-07-22 20:29:44.196 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:29:44.199 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:29:44.204 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:59:44 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:29:44.206 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 2:59:44 PM'.
2025-07-22 20:29:44.208 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:29:44.209 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:29:44.210 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 401 0 null 13.1465ms
2025-07-22 20:32:00.634 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:00.634 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:00.635 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:00.634 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:00.641 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.642 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.644 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 16.4039ms
2025-07-22 20:32:00.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 16.3432ms
2025-07-22 20:32:00.657 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 21.8658ms
2025-07-22 20:32:00.645 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.655 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:00.659 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:00.679 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 44.7526ms
2025-07-22 20:32:00.681 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.682 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.686 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:00.686 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:00.687 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
2025-07-22 20:32:00.689 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
2025-07-22 20:32:00.691 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:00.691 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:00.691 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:00.692 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:00.693 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 38.7602ms
2025-07-22 20:32:00.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:00.693 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 35.159ms
2025-07-22 20:32:00.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:00.698 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.701 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:00.702 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:00.703 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:00.704 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
2025-07-22 20:32:00.705 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:00 PM'.
2025-07-22 20:32:00.705 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:00.706 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:00.707 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:00.708 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:00.708 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 14.6822ms
2025-07-22 20:32:00.709 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 14.9247ms
2025-07-22 20:32:41.536 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 20:32:41.726 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 20:32:41.727 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 20:32:41.783 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 20:32:41.785 +05:30 [INF] Hosting environment: Development
2025-07-22 20:32:41.785 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 20:32:42.349 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 20:32:42.484 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 138.4486ms
2025-07-22 20:32:42.488 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 20:32:42.495 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 6.7944ms
2025-07-22 20:32:42.503 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 20:32:42.533 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 30.0522ms
2025-07-22 20:32:42.618 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 20:32:42.632 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 14.6101ms
2025-07-22 20:32:50.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:50.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:50.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:50.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:51.020 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.020 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.020 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.020 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.022 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 33.9643ms
2025-07-22 20:32:51.028 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:51.022 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 33.5909ms
2025-07-22 20:32:51.028 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 39.6031ms
2025-07-22 20:32:51.022 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 33.5757ms
2025-07-22 20:32:51.028 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:51.037 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.044 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:51.949 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:51 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:51.949 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:51 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:51.987 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:51 PM'.
2025-07-22 20:32:51.987 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:51 PM'.
2025-07-22 20:32:51.994 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:51.994 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:51.998 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:51.998 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:51.999 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 970.6972ms
2025-07-22 20:32:51.999 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 970.9921ms
2025-07-22 20:32:52.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:32:52.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:32:52.005 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:52.007 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:32:52.009 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:52 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:52.009 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:52 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:32:52.011 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:52 PM'.
2025-07-22 20:32:52.012 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:02:52 PM'.
2025-07-22 20:32:52.013 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:52.013 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:32:52.014 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:52.014 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:32:52.015 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 14.8728ms
2025-07-22 20:32:52.016 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 15.5826ms
2025-07-22 20:33:14.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:14.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:14.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:14.212 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:14.220 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.222 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.226 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 14.1331ms
2025-07-22 20:33:14.227 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 14.6401ms
2025-07-22 20:33:14.224 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.226 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.238 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:14.246 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 34.3842ms
2025-07-22 20:33:14.247 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 34.9588ms
2025-07-22 20:33:14.249 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:14.249 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.255 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.256 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:14.256 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:14.258 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
2025-07-22 20:33:14.259 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
2025-07-22 20:33:14.260 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:14.260 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:14.261 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:14.262 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:14.262 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 24.6376ms
2025-07-22 20:33:14.264 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:14.264 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 15.2202ms
2025-07-22 20:33:14.265 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:14.268 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.272 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:14.273 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:14.274 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:14.275 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
2025-07-22 20:33:14.276 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:14 PM'.
2025-07-22 20:33:14.277 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:14.278 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:14.278 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:14.279 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:14.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 16.257ms
2025-07-22 20:33:14.281 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 16.3535ms
2025-07-22 20:33:19.315 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:19.315 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:19.316 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:19.317 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:19.318 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.320 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.323 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.324 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.325 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 10.4723ms
2025-07-22 20:33:19.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:19.326 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 9.7887ms
2025-07-22 20:33:19.325 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.1608ms
2025-07-22 20:33:19.326 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.6938ms
2025-07-22 20:33:19.327 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:19.332 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.339 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.340 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:19.341 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:19.342 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
2025-07-22 20:33:19.343 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
2025-07-22 20:33:19.344 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:19.344 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:19.345 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:19.345 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:19.346 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 19.3222ms
2025-07-22 20:33:19.347 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 19.5592ms
2025-07-22 20:33:19.347 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:19.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:19.353 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.355 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:19.355 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:19.356 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:33:19.357 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
2025-07-22 20:33:19.359 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 2:51:51 PM', Current time (UTC): '7/22/2025 3:03:19 PM'.
2025-07-22 20:33:19.359 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:19.360 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:33:19.361 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:19.361 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:33:19.362 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 14.7431ms
2025-07-22 20:33:19.362 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 14.5513ms
2025-07-22 20:33:34.465 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 20:33:34.468 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:34.468 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 4.0636ms
2025-07-22 20:33:34.470 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 20:33:34.473 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:34.476 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 20:33:34.499 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 20:33:40.812 +05:30 [INF] Executed DbCommand (366ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 20:33:41.254 +05:30 [INF] Executed DbCommand (329ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 20:33:41.283 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 20:33:41.305 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 6802.3241ms
2025-07-22 20:33:41.307 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 20:33:41.312 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 6841.3858ms
2025-07-22 20:33:41.383 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:41.386 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.386 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:41.386 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:41.386 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:41.387 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.4871ms
2025-07-22 20:33:41.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:41.388 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.390 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.392 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.397 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.398 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 11.8549ms
2025-07-22 20:33:41.397 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.364ms
2025-07-22 20:33:41.398 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 12.5731ms
2025-07-22 20:33:41.399 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:41.407 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.408 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:41.408 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:41.412 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:41.412 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:41.800 +05:30 [INF] Executed DbCommand (283ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:33:41.820 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:41.828 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 415.1204ms
2025-07-22 20:33:41.829 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:41.830 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:41.830 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 442.1634ms
2025-07-22 20:33:41.832 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:41.834 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:41.835 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:42.212 +05:30 [INF] Executed DbCommand (328ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:33:42.215 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:42.216 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 379.5152ms
2025-07-22 20:33:42.216 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:42.217 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 387.5146ms
2025-07-22 20:33:43.343 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:33:43.362 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:43.366 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 1951.7308ms
2025-07-22 20:33:43.367 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:43.367 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:43.368 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 1969.4716ms
2025-07-22 20:33:43.369 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:43.372 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:43.372 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:43.686 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:33:43.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:43.699 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 325.7991ms
2025-07-22 20:33:43.701 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:43.702 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 334.4874ms
2025-07-22 20:33:55.111 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:55.113 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.114 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.1494ms
2025-07-22 20:33:55.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:55.116 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:55.114 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:55.119 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.123 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.124 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.621ms
2025-07-22 20:33:55.126 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:55.124 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:55.125 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 11.0179ms
2025-07-22 20:33:55.130 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.130 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:55.133 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:55.135 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:55.444 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:33:55.444 +05:30 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:33:55.446 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:55.447 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:55.448 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 313.521ms
2025-07-22 20:33:55.449 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:33:55.450 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:33:55.449 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 312.0193ms
2025-07-22 20:33:55.450 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:55.452 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.453 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:33:55.454 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:55.455 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 339.058ms
2025-07-22 20:33:55.456 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:55.456 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:55.457 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 330.9591ms
2025-07-22 20:33:55.460 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:55.461 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:33:55.767 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:33:55.767 +05:30 [INF] Executed DbCommand (300ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:33:55.770 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:55.771 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:33:55.772 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 308.4382ms
2025-07-22 20:33:55.773 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 308.5768ms
2025-07-22 20:33:55.774 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:33:55.775 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:33:55.776 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 326.5208ms
2025-07-22 20:33:55.776 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 326.2704ms
2025-07-22 20:34:02.486 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:02.486 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:02.486 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:02.486 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:02.489 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.491 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.493 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.494 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.497 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:02.497 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:02.495 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 9.7633ms
2025-07-22 20:34:02.496 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.4528ms
2025-07-22 20:34:02.495 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.1318ms
2025-07-22 20:34:02.497 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.4696ms
2025-07-22 20:34:02.505 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.506 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.516 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:02.517 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:02.518 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
2025-07-22 20:34:02.520 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
2025-07-22 20:34:02.520 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:02.521 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:02.522 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:02.523 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:02.523 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 26.9355ms
2025-07-22 20:34:02.524 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 26.7152ms
2025-07-22 20:34:02.524 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:02.525 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:02.531 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.532 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:02.534 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:02.534 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:02.536 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
2025-07-22 20:34:02.537 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:02 PM'.
2025-07-22 20:34:02.538 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:02.538 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:02.539 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:02.540 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:02.540 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 16.2332ms
2025-07-22 20:34:02.541 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 16.484ms
2025-07-22 20:34:09.377 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:09.377 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:09.377 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:09.377 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:09.379 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.381 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.383 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.385 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.386 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.0287ms
2025-07-22 20:34:09.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:09.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:09.386 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 9.6145ms
2025-07-22 20:34:09.387 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.3682ms
2025-07-22 20:34:09.388 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.1556ms
2025-07-22 20:34:09.411 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.414 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.425 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:09.425 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:09.427 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
2025-07-22 20:34:09.428 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
2025-07-22 20:34:09.429 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:09.429 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:09.430 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:09.431 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:09.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 46.2828ms
2025-07-22 20:34:09.434 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 46.6419ms
2025-07-22 20:34:09.436 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:09.436 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:09.443 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.445 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:09.446 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:09.446 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 20:34:09.447 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
2025-07-22 20:34:09.449 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 9:03:18 AM', Current time (UTC): '7/22/2025 3:04:09 PM'.
2025-07-22 20:34:09.449 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:09.450 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 20:34:09.451 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:09.451 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 20:34:09.452 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 15.788ms
2025-07-22 20:34:09.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 16.3038ms
2025-07-22 20:34:19.653 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 20:34:19.656 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:19.656 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 3.6533ms
2025-07-22 20:34:19.658 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 20:34:19.662 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:19.662 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 20:34:19.663 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 20:34:21.524 +05:30 [INF] Executed DbCommand (294ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 20:34:21.861 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 20:34:21.867 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 20:34:21.868 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2204.4055ms
2025-07-22 20:34:21.871 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 20:34:21.873 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2215.0567ms
2025-07-22 20:34:36.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:36.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:36.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:36.742 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:36.744 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.747 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.749 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.751 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.752 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 10.3904ms
2025-07-22 20:34:36.753 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 10.6381ms
2025-07-22 20:34:36.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:36.752 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.9651ms
2025-07-22 20:34:36.756 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:36.754 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 11.2991ms
2025-07-22 20:34:36.762 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.767 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:36.770 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:34:36.770 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:34:36.771 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:34:36.772 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:34:37.063 +05:30 [INF] Executed DbCommand (288ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:34:37.065 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:34:37.067 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 293.387ms
2025-07-22 20:34:37.068 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:34:37.068 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:34:37.070 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:37.071 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 315.1416ms
2025-07-22 20:34:37.071 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:34:37.074 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:34:37.082 +05:30 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:34:37.084 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:34:37.085 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 310.0724ms
2025-07-22 20:34:37.086 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:34:37.086 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:34:37.088 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:34:37.089 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 333.4152ms
2025-07-22 20:34:37.090 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:34:37.093 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:34:37.369 +05:30 [INF] Executed DbCommand (293ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:34:37.371 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:34:37.373 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 297.0449ms
2025-07-22 20:34:37.374 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:34:37.375 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 307.4593ms
2025-07-22 20:34:37.400 +05:30 [INF] Executed DbCommand (305ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:34:37.403 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:34:37.404 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 309.9135ms
2025-07-22 20:34:37.405 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:34:37.406 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 320.4746ms
2025-07-22 20:35:14.852 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:35:14.859 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:35:14.860 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 8.9782ms
2025-07-22 20:35:14.862 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 130
2025-07-22 20:35:14.865 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:35:14.867 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:35:14.871 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:35:14.899 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 20:35:14.912 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 40.032ms
2025-07-22 20:35:14.914 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:35:14.914 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 400 273 application/problem+json; charset=utf-8 52.79ms
2025-07-22 20:44:23.850 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:44:23.850 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:44:23.855 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:44:23.857 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:44:23.862 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.864 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.867 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 23.3903ms
2025-07-22 20:44:23.875 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 20.7335ms
2025-07-22 20:44:23.870 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 20.0478ms
2025-07-22 20:44:23.869 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.875 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:44:23.880 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:44:23.890 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 33.4008ms
2025-07-22 20:44:23.892 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.893 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:23.896 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:44:23.896 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:44:23.897 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:44:23.897 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:44:25.850 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:44:25.856 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:44:25.859 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 1958.9807ms
2025-07-22 20:44:25.861 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:44:25.862 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:44:25.863 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 1983.0873ms
2025-07-22 20:44:25.865 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:25.868 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:44:25.869 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:44:26.179 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:44:26.188 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:44:26.189 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.9509ms
2025-07-22 20:44:26.190 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:44:26.191 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 330.1047ms
2025-07-22 20:44:27.467 +05:30 [INF] Executed DbCommand (295ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:44:27.469 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:44:27.470 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 3571.6835ms
2025-07-22 20:44:27.472 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:44:27.472 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:44:27.473 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 3598.0411ms
2025-07-22 20:44:27.475 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:44:27.478 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:44:27.478 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:44:27.776 +05:30 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:44:27.778 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:44:27.779 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 299.6254ms
2025-07-22 20:44:27.780 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:44:27.781 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 309.311ms
2025-07-22 20:46:09.319 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:09.321 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.322 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.1558ms
2025-07-22 20:46:09.324 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:09.331 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:09.324 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:09.340 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.342 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.344 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.345 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 20.7493ms
2025-07-22 20:46:09.346 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:09.346 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 21.4629ms
2025-07-22 20:46:09.346 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:09.356 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:09.359 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.361 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:09.362 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:09.679 +05:30 [INF] Executed DbCommand (314ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:09.679 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:09.681 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:09.682 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:09.683 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.1112ms
2025-07-22 20:46:09.684 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:09.683 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 322.797ms
2025-07-22 20:46:09.684 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:09.684 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:09.686 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.687 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:09.688 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:09.689 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 342.6553ms
2025-07-22 20:46:09.690 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:09.690 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 359.505ms
2025-07-22 20:46:09.691 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:09.694 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:09.696 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:10.011 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:10.011 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:10.013 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:10.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:10.015 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 316.6322ms
2025-07-22 20:46:10.016 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.7058ms
2025-07-22 20:46:10.017 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:10.018 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:10.019 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 334.9668ms
2025-07-22 20:46:10.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 336.237ms
2025-07-22 20:46:16.769 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:16.771 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:16.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:16.774 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:16.772 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.3138ms
2025-07-22 20:46:16.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:16.775 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.776 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.779 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.782 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.785 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:16.783 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.4539ms
2025-07-22 20:46:16.785 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:16.783 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.7955ms
2025-07-22 20:46:16.786 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 14.0064ms
2025-07-22 20:46:16.794 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:16.797 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:16.803 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:16.805 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:17.114 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:17.116 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:17.117 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 313.5531ms
2025-07-22 20:46:17.118 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:17.119 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:17.119 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:17.121 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:17.122 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:17.123 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 348.9728ms
2025-07-22 20:46:17.124 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:17.124 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:17.123 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 316.5935ms
2025-07-22 20:46:17.127 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:17.128 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:17.129 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:17.129 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:17.131 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 346.7205ms
2025-07-22 20:46:17.133 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:17.433 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:17.436 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:17.437 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 306.9269ms
2025-07-22 20:46:17.438 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:17.439 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 320.402ms
2025-07-22 20:46:17.468 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:17.470 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:17.471 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 335.1828ms
2025-07-22 20:46:17.472 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:17.473 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 348.7307ms
2025-07-22 20:46:31.217 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:31.219 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.220 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.2474ms
2025-07-22 20:46:31.223 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:31.222 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:31.223 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:31.225 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.227 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.229 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.229 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 6.2264ms
2025-07-22 20:46:31.230 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:31.231 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:31.231 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.8208ms
2025-07-22 20:46:31.234 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:31.236 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.241 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:31.242 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:31.534 +05:30 [INF] Executed DbCommand (292ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:31.536 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:31.537 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 297.315ms
2025-07-22 20:46:31.538 +05:30 [INF] Executed DbCommand (292ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:31.538 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:46:31.538 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:31.540 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:31.542 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.543 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 320.9155ms
2025-07-22 20:46:31.544 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:31.545 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:46:31.544 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 299.3065ms
2025-07-22 20:46:31.548 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:31.549 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:46:31.550 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:31.552 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:31.553 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 323.0288ms
2025-07-22 20:46:31.555 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:46:31.855 +05:30 [INF] Executed DbCommand (295ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:46:31.855 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:46:31.860 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:31.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:46:31.862 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 303.5497ms
2025-07-22 20:46:31.863 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 311.0968ms
2025-07-22 20:46:31.864 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:46:31.864 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:46:31.865 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 320.642ms
2025-07-22 20:46:31.866 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 327.6775ms
2025-07-22 20:48:31.392 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:48:31.394 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:48:31.394 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:48:31.394 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.394 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:48:31.403 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.403 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.5516ms
2025-07-22 20:48:31.416 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 21.3073ms
2025-07-22 20:48:31.414 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.401 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.410 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:48:31.428 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:48:31.426 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 31.7576ms
2025-07-22 20:48:31.427 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 32.7009ms
2025-07-22 20:48:31.429 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.431 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.436 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:48:31.436 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:48:31.437 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:48:31.438 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:48:31.767 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:48:31.769 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:48:31.770 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 331.2926ms
2025-07-22 20:48:31.770 +05:30 [INF] Executed DbCommand (330ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:48:31.771 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:48:31.772 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:48:31.773 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:48:31.773 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 363.3004ms
2025-07-22 20:48:31.775 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.775 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 334.8961ms
2025-07-22 20:48:31.777 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:48:31.778 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:48:31.778 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:48:31.779 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:31.780 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:48:31.780 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 352.6666ms
2025-07-22 20:48:31.781 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:48:31.784 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:48:32.104 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:48:32.104 +05:30 [INF] Executed DbCommand (322ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:48:32.107 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:48:32.108 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:48:32.109 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 323.4886ms
2025-07-22 20:48:32.110 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 328.6718ms
2025-07-22 20:48:32.111 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:48:32.112 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:48:32.112 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 335.9398ms
2025-07-22 20:48:32.113 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 341.3885ms
2025-07-22 20:48:51.573 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - null null
2025-07-22 20:48:51.576 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:51.576 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/8 - 204 null null 3.4375ms
2025-07-22 20:48:51.577 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - application/json 100
2025-07-22 20:48:51.580 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:48:51.581 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:48:51.582 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:49:02.529 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 20:49:02.883 +05:30 [INF] Executed DbCommand (335ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [StartTime] = @p2
OUTPUT 1
WHERE [TimeSlotId] = @p3;
2025-07-22 20:49:02.895 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 20:49:02.897 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 11313.7819ms
2025-07-22 20:49:02.898 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 20:49:02.899 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/8 - 200 null text/plain; charset=utf-8 11321.628ms
2025-07-22 20:49:02.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:49:02.902 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:49:02.906 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:49:02.909 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:49:02.910 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 7.776ms
2025-07-22 20:49:02.911 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:49:02.910 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.0296ms
2025-07-22 20:49:02.911 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:49:02.916 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:49:02.921 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:49:02.921 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:49:02.922 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:49:02.922 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:49:02.923 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:49:03.223 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:49:03.225 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:49:03.226 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 301.9617ms
2025-07-22 20:49:03.227 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:49:03.227 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 316.5616ms
2025-07-22 20:49:03.243 +05:30 [INF] Executed DbCommand (317ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:49:03.245 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:49:03.246 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 320.3096ms
2025-07-22 20:49:03.247 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:49:03.247 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 336.239ms
2025-07-22 20:55:29.567 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:55:29.569 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:55:29.570 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:55:29.570 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:55:29.576 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.578 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.583 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 15.4021ms
2025-07-22 20:55:29.586 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 18.5121ms
2025-07-22 20:55:29.580 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.582 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.588 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:55:29.589 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:55:29.596 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 26.5785ms
2025-07-22 20:55:29.597 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 26.804ms
2025-07-22 20:55:29.598 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.600 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:29.604 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:55:29.605 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:55:29.605 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:55:29.606 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:55:31.724 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:55:31.730 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:55:31.733 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2126.3673ms
2025-07-22 20:55:31.737 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:55:31.738 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 20:55:31.741 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 2152.3141ms
2025-07-22 20:55:31.742 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:31.745 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:55:31.745 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:55:32.108 +05:30 [INF] Executed DbCommand (361ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 20:55:32.110 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:55:32.111 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 364.5375ms
2025-07-22 20:55:32.112 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 20:55:32.113 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 375.9109ms
2025-07-22 20:55:33.379 +05:30 [INF] Executed DbCommand (301ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:55:33.390 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:55:33.394 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 3785.576ms
2025-07-22 20:55:33.395 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 20:55:33.395 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:55:33.399 +05:30 [INF] CORS policy execution successful.
2025-07-22 20:55:33.399 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 3810.3744ms
2025-07-22 20:55:33.400 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:55:33.403 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 20:55:33.691 +05:30 [INF] Executed DbCommand (285ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 20:55:33.693 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 20:55:33.694 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 289.4621ms
2025-07-22 20:55:33.695 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 20:55:33.696 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 300.9873ms
2025-07-22 21:00:21.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:00:21.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:00:21.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:00:21.262 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:00:21.274 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.276 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.278 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.281 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 18.4733ms
2025-07-22 21:00:21.285 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 23.0705ms
2025-07-22 21:00:21.280 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 18.2919ms
2025-07-22 21:00:21.280 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.286 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:00:21.290 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:00:21.297 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 35.1003ms
2025-07-22 21:00:21.299 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.301 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.304 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:00:21.305 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:00:21.305 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:00:21.306 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:00:21.616 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 21:00:21.620 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 21:00:21.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:00:21.627 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:00:21.628 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 320.6321ms
2025-07-22 21:00:21.629 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 321.0826ms
2025-07-22 21:00:21.630 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:00:21.631 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:00:21.632 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:00:21.633 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:00:21.635 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.636 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:00:21.637 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 351.878ms
2025-07-22 21:00:21.638 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 347.9945ms
2025-07-22 21:00:21.639 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:00:21.639 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:00:21.644 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:00:21.645 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:00:21.931 +05:30 [INF] Executed DbCommand (284ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 21:00:21.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:00:21.934 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 288.1491ms
2025-07-22 21:00:21.935 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:00:21.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 306.7788ms
2025-07-22 21:00:21.938 +05:30 [INF] Executed DbCommand (289ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 21:00:21.942 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:00:21.943 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 294.941ms
2025-07-22 21:00:21.944 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:00:21.945 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 313.6772ms
2025-07-22 21:47:52.721 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 21:47:53.173 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 21:47:53.175 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 21:47:53.379 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 21:47:53.380 +05:30 [INF] Hosting environment: Development
2025-07-22 21:47:53.381 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 21:47:54.577 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 21:47:54.793 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 237.4359ms
2025-07-22 21:47:54.806 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 21:47:54.815 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 9.1992ms
2025-07-22 21:47:54.819 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 21:47:54.939 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 120.2102ms
2025-07-22 21:47:55.042 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 21:47:55.058 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.5817ms
2025-07-22 21:51:14.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:14.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:14.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:14.066 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:14.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:14.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:14.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:14.124 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 58.0912ms
2025-07-22 21:51:14.126 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 66.4527ms
2025-07-22 21:51:14.124 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 63.9369ms
2025-07-22 21:51:14.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:14.130 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:14.132 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:14.143 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 82.6707ms
2025-07-22 21:51:14.147 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:14.147 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:15.046 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:15.046 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:15.088 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
2025-07-22 21:51:15.088 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
2025-07-22 21:51:15.093 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:15.093 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:15.098 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:15.098 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:15.099 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 968.7379ms
2025-07-22 21:51:15.101 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:15.101 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:15.100 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 967.259ms
2025-07-22 21:51:15.107 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:15.109 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:15.114 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:15.114 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:15.115 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
2025-07-22 21:51:15.117 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:15 PM'.
2025-07-22 21:51:15.118 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:15.119 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:15.120 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:15.121 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:15.121 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 20.9437ms
2025-07-22 21:51:15.122 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 21.7ms
2025-07-22 21:51:32.234 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:32.235 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:32.235 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:32.236 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:32.237 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.239 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.240 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.242 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.243 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.0594ms
2025-07-22 21:51:32.243 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.0397ms
2025-07-22 21:51:32.244 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.563ms
2025-07-22 21:51:32.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:32.245 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.2295ms
2025-07-22 21:51:32.246 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:32.254 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.257 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.259 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:32.259 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:32.260 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
2025-07-22 21:51:32.262 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
2025-07-22 21:51:32.262 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:32.263 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:32.264 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:32.264 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:32.265 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 19.5314ms
2025-07-22 21:51:32.266 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 19.6671ms
2025-07-22 21:51:32.266 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:51:32.267 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:51:32.271 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.273 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:51:32.274 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:32.274 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 21:51:32.275 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
2025-07-22 21:51:32.276 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:03:40 PM', Current time (UTC): '7/22/2025 4:21:32 PM'.
2025-07-22 21:51:32.277 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:32.278 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 21:51:32.278 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:32.279 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 21:51:32.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 13.7383ms
2025-07-22 21:51:32.280 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 13.8527ms
2025-07-22 21:53:21.344 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 21:53:21.355 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:21.355 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 12.3539ms
2025-07-22 21:53:21.357 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 21:53:21.360 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:21.363 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 21:53:21.415 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 21:53:28.733 +05:30 [INF] Executed DbCommand (359ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 21:53:29.220 +05:30 [INF] Executed DbCommand (373ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 21:53:29.254 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 21:53:29.278 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 7856.3021ms
2025-07-22 21:53:29.280 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 21:53:29.285 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 7927.5492ms
2025-07-22 21:53:37.083 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:53:37.085 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:53:37.093 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:37.094 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:37.095 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 12.0882ms
2025-07-22 21:53:37.095 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 9.9648ms
2025-07-22 21:53:37.099 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:53:37.099 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:53:37.109 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:37.110 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:37.121 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:53:37.121 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:53:37.125 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:53:37.125 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:53:37.637 +05:30 [INF] Executed DbCommand (348ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 21:53:37.660 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:53:37.669 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 541.9426ms
2025-07-22 21:53:37.671 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:53:37.672 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 573.5673ms
2025-07-22 21:53:38.622 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 21:53:38.625 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:38.626 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:53:38.627 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:53:39.003 +05:30 [INF] Executed DbCommand (334ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 21:53:39.015 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:53:39.017 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 388.8426ms
2025-07-22 21:53:39.019 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 21:53:39.021 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 398.8767ms
2025-07-22 21:53:39.368 +05:30 [INF] Executed DbCommand (323ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 21:53:39.385 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:53:39.388 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 2262.1644ms
2025-07-22 21:53:39.390 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 21:53:39.390 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:53:39.391 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:53:39.392 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 2293.216ms
2025-07-22 21:53:39.393 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:53:39.397 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 21:53:39.713 +05:30 [INF] Executed DbCommand (313ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 21:53:39.719 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 21:53:39.721 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 322.3603ms
2025-07-22 21:53:39.722 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 21:53:39.722 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 332.9282ms
2025-07-22 21:59:51.503 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/8 - null null
2025-07-22 21:59:51.511 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:59:51.513 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/8 - 204 null null 10.9816ms
2025-07-22 21:59:51.515 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/8 - null null
2025-07-22 21:59:51.519 +05:30 [INF] CORS policy execution successful.
2025-07-22 21:59:51.521 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 21:59:51.527 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:00:05.923 +05:30 [INF] Executed DbCommand (338ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:00:23.654 +05:30 [INF] Executed DbCommand (3,807ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 22:00:23.665 +05:30 [ERR] An exception occurred in the database while saving changes for context type 'wellness_studio_Infrastructure.Data.AppDbContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-07-22 22:00:23.707 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 32178.2052ms
2025-07-22 22:00:23.708 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:00:23.711 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.DeleteTimeSlot(Int32 id) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 103
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 22:00:23.795 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/8 - 500 null text/plain; charset=utf-8 32254.9422ms
2025-07-22 22:03:04.917 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:04.917 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:04.922 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:04.923 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:04.928 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.930 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.934 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 17.4053ms
2025-07-22 22:03:04.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:04.935 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 18.5812ms
2025-07-22 22:03:04.932 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.933 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.940 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:04.947 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.950 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 28.5092ms
2025-07-22 22:03:04.950 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 27.3558ms
2025-07-22 22:03:04.952 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:04.953 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:04.957 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:04.958 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:04.958 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:05.315 +05:30 [INF] Executed DbCommand (354ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:03:05.318 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:05.320 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 360.1674ms
2025-07-22 22:03:05.321 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:05.321 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:05.322 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 384.0003ms
2025-07-22 22:03:05.324 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:05.326 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:05.327 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:05.660 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:03:05.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:05.664 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 335.5499ms
2025-07-22 22:03:05.665 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:05.666 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 344.6246ms
2025-07-22 22:03:07.121 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:03:07.131 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:07.136 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 2175.0128ms
2025-07-22 22:03:07.138 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:07.138 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:07.140 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:07.141 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 2201.0656ms
2025-07-22 22:03:07.142 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:07.144 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:07.454 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:03:07.459 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:07.460 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 314.5977ms
2025-07-22 22:03:07.461 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:07.463 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 325.3857ms
2025-07-22 22:03:28.663 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:03:28.666 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:28.667 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 3.7007ms
2025-07-22 22:03:28.668 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:03:28.671 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:28.671 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:03:28.674 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:31.215 +05:30 [INF] Executed DbCommand (363ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 22:03:31.229 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:31.235 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 2559.8892ms
2025-07-22 22:03:31.237 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:03:31.238 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 185 application/json; charset=utf-8 2569.7085ms
2025-07-22 22:03:31.240 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:31.240 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:31.246 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:31.248 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:31.248 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 7.8252ms
2025-07-22 22:03:31.249 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.2262ms
2025-07-22 22:03:31.249 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:03:31.250 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:03:31.257 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:31.259 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:31.259 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:31.260 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:31.260 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:31.261 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:03:31.557 +05:30 [INF] Executed DbCommand (294ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:03:31.559 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:31.560 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 298.2911ms
2025-07-22 22:03:31.561 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:03:31.562 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 312.3729ms
2025-07-22 22:03:31.619 +05:30 [INF] Executed DbCommand (355ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:03:31.625 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:03:31.626 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 363.5779ms
2025-07-22 22:03:31.628 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:03:31.629 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 378.7984ms
2025-07-22 22:03:55.386 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/9 - null null
2025-07-22 22:03:55.395 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:55.396 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/9 - 204 null null 9.9294ms
2025-07-22 22:03:55.398 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/9 - application/json 100
2025-07-22 22:03:55.404 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:03:55.405 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:03:55.412 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:04:01.756 +05:30 [INF] Executed DbCommand (342ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:04:05.216 +05:30 [INF] Executed DbCommand (347ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [StartTime] = @p2
OUTPUT 1
WHERE [TimeSlotId] = @p3;
2025-07-22 22:04:10.701 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:04:10.703 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 15289.2022ms
2025-07-22 22:04:10.704 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:04:10.705 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/9 - 200 null text/plain; charset=utf-8 15307.803ms
2025-07-22 22:04:10.709 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:04:10.709 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:04:10.710 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:10.712 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:10.712 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.8623ms
2025-07-22 22:04:10.714 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:04:10.713 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 4.3609ms
2025-07-22 22:04:10.714 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:04:10.720 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:10.722 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:10.723 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:04:10.723 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:04:10.724 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:04:10.724 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:04:11.045 +05:30 [INF] Executed DbCommand (319ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:04:11.050 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:04:11.052 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 326.7025ms
2025-07-22 22:04:11.053 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:04:11.054 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 340.0856ms
2025-07-22 22:04:11.058 +05:30 [INF] Executed DbCommand (329ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:04:11.059 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:04:11.060 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 333.0713ms
2025-07-22 22:04:11.061 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:04:11.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 132 application/json; charset=utf-8 348.3375ms
2025-07-22 22:04:42.815 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/9 - null null
2025-07-22 22:04:42.818 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:42.819 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/9 - 204 null null 3.7531ms
2025-07-22 22:04:42.820 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/9 - null null
2025-07-22 22:04:42.824 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:04:42.825 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:04:42.826 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:04:49.495 +05:30 [INF] Executed DbCommand (324ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:05:10.280 +05:30 [INF] Executed DbCommand (19,681ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 22:05:10.286 +05:30 [ERR] An exception occurred in the database while saving changes for context type 'wellness_studio_Infrastructure.Data.AppDbContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-07-22 22:05:10.322 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 27494.2587ms
2025-07-22 22:05:10.323 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:05:10.324 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.DeleteTimeSlot(Int32 id) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 103
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 22:05:10.330 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/9 - 500 null text/plain; charset=utf-8 27509.9905ms
2025-07-22 22:06:15.870 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:06:15.875 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:06:15.875 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:06:15.878 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:06:15.884 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.886 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.889 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 19.5003ms
2025-07-22 22:06:15.891 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 16.4036ms
2025-07-22 22:06:15.887 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.889 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.894 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:06:15.901 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:06:15.909 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 34.3471ms
2025-07-22 22:06:15.909 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 31.9226ms
2025-07-22 22:06:15.911 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.913 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:15.917 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:06:15.918 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:06:15.918 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:15.919 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:16.246 +05:30 [INF] Executed DbCommand (325ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:06:16.249 +05:30 [INF] Executed DbCommand (326ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:06:16.254 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:06:16.256 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:06:16.257 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 337.1984ms
2025-07-22 22:06:16.258 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:06:16.259 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 337.6025ms
2025-07-22 22:06:16.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:06:16.260 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:06:16.261 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:16.262 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:06:16.264 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:16.264 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 371.5223ms
2025-07-22 22:06:16.265 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:06:16.266 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 364.2742ms
2025-07-22 22:06:16.266 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:06:16.269 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:16.271 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:16.574 +05:30 [INF] Executed DbCommand (301ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:06:16.576 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:06:16.576 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 304.4158ms
2025-07-22 22:06:16.578 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:06:16.579 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 320.8742ms
2025-07-22 22:06:16.590 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:06:16.591 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:06:16.592 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.7693ms
2025-07-22 22:06:16.593 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:06:16.594 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 334.9947ms
2025-07-22 22:06:30.798 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:06:30.800 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:30.801 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 3.6762ms
2025-07-22 22:06:30.802 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:30.805 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:30.806 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:30.807 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:30.824 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:30.837 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 29.0049ms
2025-07-22 22:06:30.838 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:30.839 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 36.6709ms
2025-07-22 22:06:40.456 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:06:40.460 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:40.460 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 4.496ms
2025-07-22 22:06:40.461 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:40.465 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:40.466 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:40.467 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:40.468 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:40.469 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 1.7213ms
2025-07-22 22:06:40.470 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:40.471 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 9.9071ms
2025-07-22 22:06:41.144 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:41.147 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:41.148 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:41.149 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:41.151 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:41.152 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 1.9114ms
2025-07-22 22:06:41.154 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:41.154 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 10.2475ms
2025-07-22 22:06:48.570 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:06:48.573 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:48.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 3.5958ms
2025-07-22 22:06:48.575 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:48.578 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:48.579 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:48.580 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:48.582 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:48.583 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 1.5411ms
2025-07-22 22:06:48.584 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:48.584 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 9.2153ms
2025-07-22 22:06:49.174 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:49.177 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:49.178 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.180 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:49.182 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:49.183 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 1.8449ms
2025-07-22 22:06:49.184 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.184 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 11.0572ms
2025-07-22 22:06:49.575 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:49.578 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:49.579 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.580 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:49.586 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:49.587 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 6.2512ms
2025-07-22 22:06:49.589 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.589 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 14.4155ms
2025-07-22 22:06:49.812 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:06:49.815 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:06:49.816 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.817 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:06:49.819 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:06:49.820 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 1.5394ms
2025-07-22 22:06:49.821 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:06:49.822 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 400 274 application/problem+json; charset=utf-8 10.7106ms
2025-07-22 22:07:10.558 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:07:10.561 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:10.561 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 3.2532ms
2025-07-22 22:07:10.562 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:07:10.565 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:10.566 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:07:10.566 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:07:58.555 +05:30 [INF] Executed DbCommand (366ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 22:07:58.562 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:07:58.564 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 47996.3231ms
2025-07-22 22:07:58.565 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:07:58.566 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 186 application/json; charset=utf-8 48004.2001ms
2025-07-22 22:07:58.573 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:07:58.573 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:07:58.579 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:58.580 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:58.581 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.1182ms
2025-07-22 22:07:58.581 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.2623ms
2025-07-22 22:07:58.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:07:58.582 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:07:58.591 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:58.592 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:07:58.593 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:07:58.593 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:07:58.594 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:07:58.594 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:07:58.895 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:07:58.904 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:07:58.906 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 310.1704ms
2025-07-22 22:07:58.906 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:07:58.907 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:07:58.909 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:07:58.909 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 326.6356ms
2025-07-22 22:07:58.911 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 313.6079ms
2025-07-22 22:07:58.914 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:07:58.915 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 332.9577ms
2025-07-22 22:08:30.348 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:08:30.356 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:30.357 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 8.9777ms
2025-07-22 22:08:30.358 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:08:30.361 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:30.363 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:30.364 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:08:30.366 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:08:30.368 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 2.2775ms
2025-07-22 22:08:30.369 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:30.370 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 274 application/problem+json; charset=utf-8 11.938ms
2025-07-22 22:08:41.990 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:08:41.993 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:41.994 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.1386ms
2025-07-22 22:08:41.995 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:08:41.999 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:42.000 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:42.001 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:08:42.003 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:08:42.004 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 2.0722ms
2025-07-22 22:08:42.005 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:42.006 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 274 application/problem+json; charset=utf-8 10.8205ms
2025-07-22 22:08:49.042 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:08:49.045 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:49.046 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.1914ms
2025-07-22 22:08:49.047 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:08:49.050 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:08:49.051 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:49.051 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:08:49.054 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:08:49.055 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 2.1649ms
2025-07-22 22:08:49.056 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:08:49.056 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 274 application/problem+json; charset=utf-8 9.6038ms
2025-07-22 22:09:08.227 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:09:08.230 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:08.231 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.4296ms
2025-07-22 22:09:08.232 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:09:08.235 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:08.235 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:08.236 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:09:08.237 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:09:08.238 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 1.4997ms
2025-07-22 22:09:08.239 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:08.240 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 273 application/problem+json; charset=utf-8 8.3535ms
2025-07-22 22:09:10.354 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:09:10.357 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:10.358 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:10.359 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:09:10.361 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:09:10.362 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 1.8322ms
2025-07-22 22:09:10.363 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:10.364 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 273 application/problem+json; charset=utf-8 10.1603ms
2025-07-22 22:09:23.685 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:09:23.689 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:23.690 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.8881ms
2025-07-22 22:09:23.691 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:09:23.695 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:23.696 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:23.696 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:09:23.698 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:09:23.699 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 1.4296ms
2025-07-22 22:09:23.699 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:23.700 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 273 application/problem+json; charset=utf-8 8.7155ms
2025-07-22 22:09:36.747 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:09:36.750 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:36.751 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.2532ms
2025-07-22 22:09:36.753 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:09:36.760 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:36.761 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:36.762 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:09:36.764 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:09:36.766 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 2.0137ms
2025-07-22 22:09:36.766 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:36.767 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 273 application/problem+json; charset=utf-8 14.2714ms
2025-07-22 22:09:57.826 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:09:57.834 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:57.834 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 8.6546ms
2025-07-22 22:09:57.836 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:09:57.838 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:09:57.839 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:57.840 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:09:57.842 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-07-22 22:09:57.844 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 2.5913ms
2025-07-22 22:09:57.845 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:09:57.846 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 400 273 application/problem+json; charset=utf-8 10.4748ms
2025-07-22 22:10:35.186 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:35.189 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:35.189 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:35.189 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.189 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:35.195 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.197 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.208 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 19.6872ms
2025-07-22 22:10:35.214 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 24.8236ms
2025-07-22 22:10:35.198 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.7672ms
2025-07-22 22:10:35.204 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.204 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:35.210 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:35.227 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 38.0722ms
2025-07-22 22:10:35.229 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.231 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.233 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:35.234 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:35.234 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:35.235 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:35.549 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:10:35.551 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:35.552 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 314.3469ms
2025-07-22 22:10:35.552 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:10:35.553 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:35.553 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:35.555 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:35.556 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.557 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 346.5737ms
2025-07-22 22:10:35.558 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:35.561 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:35.558 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 321.6331ms
2025-07-22 22:10:35.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:35.564 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:35.567 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:35.567 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 363.4327ms
2025-07-22 22:10:35.568 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:35.570 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:35.857 +05:30 [INF] Executed DbCommand (293ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:10:35.858 +05:30 [INF] Executed DbCommand (286ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:10:35.861 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:35.863 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:35.863 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 300.0914ms
2025-07-22 22:10:35.864 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 292.7753ms
2025-07-22 22:10:35.865 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:35.866 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:35.866 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 313.347ms
2025-07-22 22:10:35.867 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 308.5325ms
2025-07-22 22:10:46.152 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - null null
2025-07-22 22:10:46.155 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:46.156 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/10 - 204 null null 4.1026ms
2025-07-22 22:10:46.157 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - application/json 100
2025-07-22 22:10:46.160 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:46.161 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:10:46.162 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:49.920 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:10:50.284 +05:30 [INF] Executed DbCommand (362ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [StartTime] = @p2
OUTPUT 1
WHERE [TimeSlotId] = @p3;
2025-07-22 22:10:50.292 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:10:50.296 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 4133.1266ms
2025-07-22 22:10:50.298 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:10:50.299 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/10 - 200 null text/plain; charset=utf-8 4141.775ms
2025-07-22 22:10:50.302 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:50.302 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:50.304 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:50.306 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:50.306 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 4.4496ms
2025-07-22 22:10:50.307 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:10:50.307 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 4.9424ms
2025-07-22 22:10:50.308 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:10:50.310 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:50.314 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:10:50.314 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:50.315 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:50.315 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:50.316 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:10:50.617 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:10:50.618 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:10:50.619 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:50.620 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:10:50.621 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 303.872ms
2025-07-22 22:10:50.622 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 304.1623ms
2025-07-22 22:10:50.623 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:10:50.624 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:10:50.624 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 317.1779ms
2025-07-22 22:10:50.625 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 317.3496ms
2025-07-22 22:15:16.399 +05:30 [INF] Request starting HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - null null
2025-07-22 22:15:16.402 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 22:15:16.403 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 22:15:16.407 +05:30 [INF] Request finished HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - 401 0 null 8.7434ms
2025-07-22 22:15:30.170 +05:30 [INF] Request starting HTTP/1.1 POST https://localhost:7264/api/Auth/login - application/json 60
2025-07-22 22:15:30.176 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 22:15:30.177 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 22:15:36.548 +05:30 [INF] Executed DbCommand (416ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 22:15:39.124 +05:30 [INF] Executed DbCommand (2,566ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 22:15:39.131 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 22:15:39.132 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 8953.9267ms
2025-07-22 22:15:39.133 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 22:15:39.133 +05:30 [INF] Request finished HTTP/1.1 POST https://localhost:7264/api/Auth/login - 200 546 application/json; charset=utf-8 8963.5497ms
2025-07-22 22:16:36.202 +05:30 [INF] Request starting HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - null null
2025-07-22 22:16:36.209 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'Sg7KSM_QLYVKVZK9qk7SsztuknbLMq8M_0u6_aFi2qE'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 22:16:36.212 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'Sg7KSM_QLYVKVZK9qk7SsztuknbLMq8M_0u6_aFi2qE'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
2025-07-22 22:16:36.213 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 22:16:36.213 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 22:16:36.214 +05:30 [INF] Request finished HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - 401 0 null 11.8765ms
2025-07-22 22:16:53.636 +05:30 [INF] Request starting HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - null null
2025-07-22 22:16:53.638 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenSignatureKeyNotFoundException: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'Sg7KSM_QLYVKVZK9qk7SsztuknbLMq8M_0u6_aFi2qE'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignature(JsonWebToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateSignatureAndIssuerSecurityKey(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 22:16:53.640 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10517: Signature validation failed. The token's kid is missing. Keys tried: 'Microsoft.IdentityModel.Tokens.SymmetricSecurityKey, KeyId: '', InternalId: 'Sg7KSM_QLYVKVZK9qk7SsztuknbLMq8M_0u6_aFi2qE'. , KeyId: 
'. Number of keys in TokenValidationParameters: '1'. 
Number of keys in Configuration: '0'. 
Exceptions caught:
 '[PII of type 'System.Text.StringBuilder' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'.
token: '[PII of type 'Microsoft.IdentityModel.JsonWebTokens.JsonWebToken' is hidden. For more details, see https://aka.ms/IdentityModel/PII.]'. See https://aka.ms/IDX10503 for details.
2025-07-22 22:16:53.640 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 22:16:53.641 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 22:16:53.642 +05:30 [INF] Request finished HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - 401 0 null 5.6234ms
2025-07-22 22:17:12.666 +05:30 [INF] Request starting HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - null null
2025-07-22 22:17:12.668 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:17:12.670 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:17:24.161 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:17:31.760 +05:30 [INF] Executed DbCommand (5,705ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 22:17:31.766 +05:30 [ERR] An exception occurred in the database while saving changes for context type 'wellness_studio_Infrastructure.Data.AppDbContext'.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-07-22 22:17:31.807 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 19135.539ms
2025-07-22 22:17:31.808 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:17:31.809 +05:30 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: A second operation was started on this context instance before a previous operation completed. This is usually caused by different threads concurrently using the same instance of DbContext. For more information on how to avoid threading issues with DbContext, see https://go.microsoft.com/fwlink/?linkid=2097913.
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.ConcurrencyDetector.EnterCriticalSection()
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at wellness_studio_Infrastructure.UnitOfWork.UnitOfWork.SaveAsync() in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-Infrastructure\UnitOfWork\UnitOfWork.cs:line 45
   at wellness_studio_API.Controllers.AdminController.DeleteTimeSlot(Int32 id) in D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API\Controllers\AdminController.cs:line 103
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2025-07-22 22:17:31.815 +05:30 [INF] Request finished HTTP/1.1 DELETE https://localhost:7264/api/admin/delete-time-slot/10 - 500 null text/plain; charset=utf-8 19149.3308ms
2025-07-22 22:36:20.137 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 22:36:20.322 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 22:36:20.323 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 22:36:20.617 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 22:36:20.618 +05:30 [INF] Hosting environment: Development
2025-07-22 22:36:20.619 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 22:36:20.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 22:36:20.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 188.9845ms
2025-07-22 22:36:20.980 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 22:36:20.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 7.3185ms
2025-07-22 22:36:21.005 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 22:36:21.041 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 35.8306ms
2025-07-22 22:36:21.145 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 22:36:21.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.9438ms
2025-07-22 22:37:20.618 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:20.618 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:20.618 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:20.618 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:20.669 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:20.669 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:20.669 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:20.670 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:20.672 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 53.7921ms
2025-07-22 22:37:20.672 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 54.152ms
2025-07-22 22:37:20.672 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 53.7784ms
2025-07-22 22:37:20.675 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 55.6892ms
2025-07-22 22:37:20.676 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:20.678 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:20.694 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:20.694 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:21.461 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:21.461 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:21.486 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:21.486 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:25.415 +05:30 [INF] Executed DbCommand (534ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:37:25.503 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:25.575 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:25.575 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 4085.147ms
2025-07-22 22:37:25.577 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:25.578 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:25.583 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 4906.789ms
2025-07-22 22:37:25.585 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:25.586 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:25.970 +05:30 [INF] Executed DbCommand (330ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:37:25.975 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:25.976 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 389.5542ms
2025-07-22 22:37:25.978 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:25.978 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 404.0692ms
2025-07-22 22:37:26.879 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:37:26.899 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:26.906 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 5417.2787ms
2025-07-22 22:37:26.909 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:26.910 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:26.915 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:26.916 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 6238.0851ms
2025-07-22 22:37:26.917 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:26.919 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:27.236 +05:30 [INF] Executed DbCommand (314ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:37:27.240 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:27.241 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 321.0709ms
2025-07-22 22:37:27.243 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:27.244 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 335.9219ms
2025-07-22 22:37:47.163 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:37:47.166 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:47.166 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 3.6005ms
2025-07-22 22:37:47.168 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:37:47.170 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:47.171 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:37:47.178 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:50.949 +05:30 [INF] Executed DbCommand (371ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 22:37:50.966 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:50.971 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 3791.943ms
2025-07-22 22:37:50.972 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:37:50.973 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 186 application/json; charset=utf-8 3805.1978ms
2025-07-22 22:37:50.976 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:50.976 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:50.982 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:50.983 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:50.984 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.4838ms
2025-07-22 22:37:50.986 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:37:50.984 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.3195ms
2025-07-22 22:37:50.986 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:37:50.992 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:50.996 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:37:50.997 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:50.997 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:50.998 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:50.998 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:37:51.342 +05:30 [INF] Executed DbCommand (339ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:37:51.342 +05:30 [INF] Executed DbCommand (342ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:37:51.349 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:51.352 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:37:51.353 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 353.9804ms
2025-07-22 22:37:51.353 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 352.422ms
2025-07-22 22:37:51.354 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:37:51.355 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:37:51.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 370.5865ms
2025-07-22 22:37:51.357 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 371.8538ms
2025-07-22 22:38:20.020 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/11 - null null
2025-07-22 22:38:20.022 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:20.022 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/11 - 204 null null 2.6549ms
2025-07-22 22:38:20.023 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/11 - application/json 100
2025-07-22 22:38:20.026 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:20.029 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:38:20.033 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:38:27.722 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:38:37.810 +05:30 [INF] Executed DbCommand (336ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [IsAvailable] = @p2, [StartTime] = @p3
OUTPUT 1
WHERE [TimeSlotId] = @p4;
2025-07-22 22:38:37.816 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:38:37.817 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 17783.0175ms
2025-07-22 22:38:37.818 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:38:37.818 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/11 - 200 null text/plain; charset=utf-8 17795.2253ms
2025-07-22 22:38:37.824 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:38:37.824 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:38:37.826 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:37.827 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:37.828 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.9218ms
2025-07-22 22:38:37.829 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:38:37.829 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 5.2286ms
2025-07-22 22:38:37.834 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:38:37.839 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:37.842 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:37.843 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:38:37.844 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:38:37.844 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:38:37.845 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:38:38.178 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:38:38.178 +05:30 [INF] Executed DbCommand (330ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:38:38.181 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:38:38.182 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:38:38.183 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 337.145ms
2025-07-22 22:38:38.184 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 336.9221ms
2025-07-22 22:38:38.185 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:38:38.186 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:38:38.186 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 357.0762ms
2025-07-22 22:38:38.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 353.5278ms
2025-07-22 22:38:51.973 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/11 - null null
2025-07-22 22:38:51.975 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:51.976 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/11 - 204 null null 3.4897ms
2025-07-22 22:38:51.977 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/11 - null null
2025-07-22 22:38:51.980 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:38:51.981 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:38:51.985 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:38:56.603 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:38:59.619 +05:30 [INF] Executed DbCommand (340ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 22:39:02.556 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:39:02.558 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 10571.5082ms
2025-07-22 22:39:02.559 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 22:39:02.561 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/11 - 200 null text/plain; charset=utf-8 10583.6016ms
2025-07-22 22:39:02.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:39:02.566 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:39:02.572 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:02.573 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:02.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.0939ms
2025-07-22 22:39:02.575 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:39:02.576 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:39:02.574 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.2483ms
2025-07-22 22:39:02.583 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:02.584 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:02.586 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:39:02.587 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:39:02.588 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:39:02.588 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:39:02.920 +05:30 [INF] Executed DbCommand (330ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:39:02.925 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:39:02.926 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 336.5789ms
2025-07-22 22:39:02.927 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:39:02.928 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 353.0357ms
2025-07-22 22:39:02.932 +05:30 [INF] Executed DbCommand (339ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:39:02.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:39:02.934 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 343.4026ms
2025-07-22 22:39:02.935 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:39:02.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 360.1261ms
2025-07-22 22:39:42.520 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 22:39:42.522 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:42.523 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 2.8187ms
2025-07-22 22:39:42.524 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 22:39:42.527 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:42.528 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:39:42.529 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:39:48.498 +05:30 [INF] Executed DbCommand (388ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 22:39:48.500 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:39:48.501 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 5970.7054ms
2025-07-22 22:39:48.502 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 22:39:48.502 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 186 application/json; charset=utf-8 5978.6043ms
2025-07-22 22:39:48.505 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:39:48.505 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:39:48.511 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:48.512 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:48.513 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.7406ms
2025-07-22 22:39:48.515 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:39:48.513 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.7542ms
2025-07-22 22:39:48.514 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:39:48.520 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:48.524 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:39:48.524 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:39:48.525 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:39:48.525 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:39:48.526 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:39:48.838 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:39:48.839 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:39:48.844 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:39:48.845 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:39:48.846 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 318.8079ms
2025-07-22 22:39:48.847 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.1151ms
2025-07-22 22:39:48.847 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:39:48.848 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:39:48.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 334.0367ms
2025-07-22 22:39:48.849 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 335.2831ms
2025-07-22 22:42:19.418 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - null null
2025-07-22 22:42:19.426 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:19.427 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - 204 null null 9.66ms
2025-07-22 22:42:19.432 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - application/json 100
2025-07-22 22:42:19.438 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:19.440 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:42:19.441 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:42:23.745 +05:30 [INF] Executed DbCommand (346ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:42:24.940 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [IsAvailable] = @p2, [StartTime] = @p3
OUTPUT 1
WHERE [TimeSlotId] = @p4;
2025-07-22 22:42:24.943 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:42:24.944 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 5502.4231ms
2025-07-22 22:42:24.946 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:42:24.947 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - 200 null text/plain; charset=utf-8 5515.5907ms
2025-07-22 22:42:32.817 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:42:32.817 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:42:32.820 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:32.822 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:32.822 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 5.8491ms
2025-07-22 22:42:32.826 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:42:32.823 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 6.4607ms
2025-07-22 22:42:32.826 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:42:32.837 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:32.841 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:42:32.842 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:42:32.842 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:42:32.843 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:42:32.844 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:42:33.159 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:42:33.161 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:42:33.163 +05:30 [INF] Executed DbCommand (314ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:42:33.163 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 317.6885ms
2025-07-22 22:42:33.169 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:42:33.169 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:42:33.170 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 323.2637ms
2025-07-22 22:42:33.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 345.4224ms
2025-07-22 22:42:33.171 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:42:33.175 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 349.0893ms
2025-07-22 22:53:41.471 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:53:41.471 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:53:41.471 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:53:41.471 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:53:41.480 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.481 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.484 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.485 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.486 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 15.7849ms
2025-07-22 22:53:41.515 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 44.9111ms
2025-07-22 22:53:41.515 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 15.0848ms
2025-07-22 22:53:41.519 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 48.4019ms
2025-07-22 22:53:41.519 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:53:41.519 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:53:41.537 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.538 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:41.540 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:53:41.541 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:53:41.542 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:53:41.542 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:53:43.654 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:53:43.662 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:53:43.666 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2122.8778ms
2025-07-22 22:53:43.667 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:53:43.668 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 2149.5307ms
2025-07-22 22:53:43.668 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:53:43.673 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:43.674 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:53:43.674 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:53:43.974 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:53:43.982 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:53:43.984 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 309.0402ms
2025-07-22 22:53:43.986 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:53:43.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 318.348ms
2025-07-22 22:53:45.168 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:53:45.180 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:53:45.187 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 3644.7475ms
2025-07-22 22:53:45.188 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:53:45.188 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:53:45.190 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:53:45.191 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 3672.164ms
2025-07-22 22:53:45.192 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:53:45.194 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:53:45.508 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:53:45.517 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:53:45.520 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 324.9814ms
2025-07-22 22:53:45.521 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:53:45.522 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 334.1027ms
2025-07-22 22:54:54.022 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - null null
2025-07-22 22:54:54.028 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:54:54.029 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - 204 null null 8.0164ms
2025-07-22 22:54:54.034 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - application/json 100
2025-07-22 22:54:54.040 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:54:54.041 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:54:54.042 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:55:08.130 +05:30 [INF] Executed DbCommand (300ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 22:55:19.589 +05:30 [INF] Executed DbCommand (491ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [IsAvailable] = @p2, [StartTime] = @p3
OUTPUT 1
WHERE [TimeSlotId] = @p4;
2025-07-22 22:55:21.277 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 22:55:21.278 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 27233.7247ms
2025-07-22 22:55:21.282 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 22:55:21.284 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - 200 null text/plain; charset=utf-8 27250.0407ms
2025-07-22 22:55:21.287 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:55:21.287 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:55:21.288 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:55:21.290 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:55:21.290 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 3.7162ms
2025-07-22 22:55:21.291 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 4.276ms
2025-07-22 22:55:21.292 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 22:55:21.296 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 22:55:21.303 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:55:21.305 +05:30 [INF] CORS policy execution successful.
2025-07-22 22:55:21.305 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:55:21.306 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:55:21.306 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:55:21.307 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 22:55:21.609 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 22:55:21.617 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:55:21.618 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 310.0758ms
2025-07-22 22:55:21.619 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 22:55:21.620 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 328.6237ms
2025-07-22 22:55:21.621 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 22:55:21.624 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 22:55:21.625 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 315.5269ms
2025-07-22 22:55:21.626 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 22:55:21.626 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 330.1647ms
2025-07-22 23:03:17.988 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:18.028 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:18.035 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.029 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:18.041 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.041 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 53.7369ms
2025-07-22 23:03:18.052 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.035 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:18.054 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 26.2492ms
2025-07-22 23:03:18.058 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 29.6096ms
2025-07-22 23:03:18.048 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:18.060 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:18.061 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.067 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.068 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.069 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 34.0917ms
2025-07-22 23:03:18.084 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:18.084 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:18.157 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
2025-07-22 23:03:18.157 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
2025-07-22 23:03:18.161 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:18.161 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:18.170 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:18.170 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:18.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 122.7966ms
2025-07-22 23:03:18.171 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 112.0072ms
2025-07-22 23:03:18.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:18.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:18.177 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.178 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:18.179 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:18.180 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:18.182 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
2025-07-22 23:03:18.184 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:18 PM'.
2025-07-22 23:03:18.184 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:18.184 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:18.185 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:18.185 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:18.186 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 13.246ms
2025-07-22 23:03:18.187 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 13.9385ms
2025-07-22 23:03:20.777 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:20.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:20.780 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:20.782 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:20.783 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:20.783 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:20.787 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
2025-07-22 23:03:20.787 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
2025-07-22 23:03:20.788 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:20.788 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:20.789 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:20.790 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:20.791 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 14.0657ms
2025-07-22 23:03:20.791 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 13.7212ms
2025-07-22 23:03:20.792 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:20.798 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:20.799 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:20.800 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
2025-07-22 23:03:20.801 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:20.802 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:20.802 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 10.7915ms
2025-07-22 23:03:20.838 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:20.841 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:20.843 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:20.846 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:20 PM'.
2025-07-22 23:03:20.847 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:20.848 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:20.848 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 10.2617ms
2025-07-22 23:03:22.622 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:22.624 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:22.626 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:22.629 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
2025-07-22 23:03:22.630 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:22.631 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:22.632 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 10.2538ms
2025-07-22 23:03:22.682 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:22.684 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:22.684 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:22.685 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:22.687 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:22.688 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
2025-07-22 23:03:22.689 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:22.689 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:22.691 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
2025-07-22 23:03:22.691 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:22.692 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:22.692 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 10.6719ms
2025-07-22 23:03:22.693 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:22.694 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:22.695 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 10.8432ms
2025-07-22 23:03:22.697 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:22.699 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:22.701 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:22 PM'.
2025-07-22 23:03:22.702 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:22.703 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:22.703 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 9.9564ms
2025-07-22 23:03:23.766 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:23.768 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.769 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.0188ms
2025-07-22 23:03:23.770 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:23.772 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.773 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:23.775 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
2025-07-22 23:03:23.776 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:23.776 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:23.777 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 6.8855ms
2025-07-22 23:03:23.827 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:23.828 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:23.828 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:23.831 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.832 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.834 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.835 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.7459ms
2025-07-22 23:03:23.837 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:23.835 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.4498ms
2025-07-22 23:03:23.837 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:23.841 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.846 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
2025-07-22 23:03:23.847 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:23.847 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:23.849 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
2025-07-22 23:03:23.849 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:23.850 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:23.850 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 22.6416ms
2025-07-22 23:03:23.851 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:23.854 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 17.6757ms
2025-07-22 23:03:23.856 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:23.859 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:23.860 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:23.862 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:23 PM'.
2025-07-22 23:03:23.863 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:23.864 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:23.865 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 9.1544ms
2025-07-22 23:03:24.891 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:24.892 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:24.894 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:24.896 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:24.897 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:24.898 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:24.900 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
2025-07-22 23:03:24.901 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
2025-07-22 23:03:24.901 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:24.902 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:24.903 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:24.903 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:24.904 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 13.5473ms
2025-07-22 23:03:24.906 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:24.906 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:24.905 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 13.1443ms
2025-07-22 23:03:24.910 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:24.911 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:24.915 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:24.915 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:03:24.917 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
2025-07-22 23:03:24.918 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 5:23:28 PM', Current time (UTC): '7/22/2025 5:33:24 PM'.
2025-07-22 23:03:24.918 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:24.919 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:03:24.919 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:24.920 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:03:24.921 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 14.5676ms
2025-07-22 23:03:24.921 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 15.4938ms
2025-07-22 23:03:44.427 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 23:03:44.434 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:44.434 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 7.416ms
2025-07-22 23:03:44.436 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 43
2025-07-22 23:03:44.439 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:44.441 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:03:44.458 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:03:48.177 +05:30 [INF] Executed DbCommand (317ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 23:03:48.184 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2025-07-22 23:03:48.186 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 3726.0474ms
2025-07-22 23:03:48.187 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:03:48.189 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 401 null text/plain; charset=utf-8 3753.17ms
2025-07-22 23:03:56.940 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 23:03:56.944 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:56.944 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 4.2806ms
2025-07-22 23:03:56.945 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 23:03:56.948 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:56.949 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:03:56.950 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:03:58.917 +05:30 [INF] Executed DbCommand (311ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 23:03:59.295 +05:30 [INF] Executed DbCommand (336ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:03:59.315 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:03:59.318 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 2367.44ms
2025-07-22 23:03:59.319 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:03:59.320 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 2374.7555ms
2025-07-22 23:03:59.405 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:59.407 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:59.406 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:59.406 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:59.414 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.416 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.417 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.419 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.420 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 14.1257ms
2025-07-22 23:03:59.421 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 15.4969ms
2025-07-22 23:03:59.420 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 14.9468ms
2025-07-22 23:03:59.421 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:59.422 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 16.8587ms
2025-07-22 23:03:59.422 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:03:59.435 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.439 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.440 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:03:59.441 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:03:59.441 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:03:59.442 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:03:59.749 +05:30 [INF] Executed DbCommand (305ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:03:59.750 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:03:59.751 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 308.502ms
2025-07-22 23:03:59.752 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:03:59.753 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:03:59.754 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:03:59.755 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 334.0748ms
2025-07-22 23:03:59.756 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:03:59.758 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:04:00.056 +05:30 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:04:00.058 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:04:00.060 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 300.1117ms
2025-07-22 23:04:00.061 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:04:00.061 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 308.7886ms
2025-07-22 23:04:01.545 +05:30 [INF] Executed DbCommand (305ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:04:01.550 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:04:01.552 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 2107.0564ms
2025-07-22 23:04:01.553 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:04:01.553 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:04:01.555 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:01.555 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 2133.7198ms
2025-07-22 23:04:01.556 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:04:01.559 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:04:01.858 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:04:01.860 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:04:01.862 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 302.1167ms
2025-07-22 23:04:01.863 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:04:01.864 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 310.6872ms
2025-07-22 23:04:20.432 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - null null
2025-07-22 23:04:20.435 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:20.436 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/edit-time-slot/12 - 204 null null 3.9233ms
2025-07-22 23:04:20.437 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - application/json 101
2025-07-22 23:04:20.440 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:20.440 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 23:04:20.441 +05:30 [INF] Route matched with {action = "EditTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditTimeSlot(Int32, wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:04:24.256 +05:30 [INF] Executed DbCommand (355ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 23:04:25.459 +05:30 [INF] Executed DbCommand (317ms) [Parameters=[@p4='?' (DbType = Int32), @p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [TimeSlots] SET [Date] = @p0, [EndTime] = @p1, [IsAvailable] = @p2, [StartTime] = @p3
OUTPUT 1
WHERE [TimeSlotId] = @p4;
2025-07-22 23:04:25.462 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 23:04:25.464 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API) in 5021.9654ms
2025-07-22 23:04:25.465 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.EditTimeSlot (wellness-studio-API)'
2025-07-22 23:04:25.466 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7264/api/admin/edit-time-slot/12 - 200 null text/plain; charset=utf-8 5029.5267ms
2025-07-22 23:04:25.469 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:04:25.469 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:04:25.471 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:25.473 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:25.473 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 3.9188ms
2025-07-22 23:04:25.474 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:04:25.474 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:04:25.474 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 4.913ms
2025-07-22 23:04:25.477 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:25.479 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:04:25.482 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:04:25.482 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:04:25.483 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:04:25.483 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:04:25.797 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:04:25.797 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:04:25.799 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:04:25.800 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:04:25.802 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 315.7711ms
2025-07-22 23:04:25.804 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 319.1902ms
2025-07-22 23:04:25.806 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:04:25.805 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:04:25.807 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 332.2471ms
2025-07-22 23:04:25.807 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 332.9825ms
2025-07-22 23:13:42.882 +05:30 [INF] User profile is available. Using 'C:\Users\pc\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-22 23:13:43.132 +05:30 [INF] Now listening on: https://localhost:7264
2025-07-22 23:13:43.133 +05:30 [INF] Now listening on: http://localhost:5009
2025-07-22 23:13:43.194 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-07-22 23:13:43.195 +05:30 [INF] Hosting environment: Development
2025-07-22 23:13:43.195 +05:30 [INF] Content root path: D:\AppointmentSchedulingSystem\welness-studio- server\wellness-studio-server\wellness-studio-API
2025-07-22 23:13:43.930 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/index.html - null null
2025-07-22 23:13:44.074 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/index.html - 200 null text/html;charset=utf-8 148.28ms
2025-07-22 23:13:44.095 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - null null
2025-07-22 23:13:44.102 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_framework/aspnetcore-browser-refresh.js - 200 16523 application/javascript; charset=utf-8 7.4805ms
2025-07-22 23:13:44.116 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/_vs/browserLink - null null
2025-07-22 23:13:44.145 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.1031ms
2025-07-22 23:13:44.244 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - null null
2025-07-22 23:13:44.255 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 10.9356ms
2025-07-22 23:30:45.821 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:30:45.820 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:30:45.820 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:30:45.820 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:30:45.907 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:45.907 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:45.907 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:45.907 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:45.911 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 127.7026ms
2025-07-22 23:30:45.914 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:30:45.911 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 127.7026ms
2025-07-22 23:30:45.914 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:30:45.911 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 127.7026ms
2025-07-22 23:30:45.911 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 127.7026ms
2025-07-22 23:30:45.927 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:45.927 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:47.065 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:30:47.065 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:30:47.117 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:30:47.117 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:30:51.242 +05:30 [INF] Executed DbCommand (378ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:30:51.326 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:30:51.406 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:30:51.407 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 4284.0639ms
2025-07-22 23:30:51.407 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:51.408 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:30:51.412 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:30:51.413 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:30:51.414 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 5500.3852ms
2025-07-22 23:30:51.794 +05:30 [INF] Executed DbCommand (334ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:30:51.797 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:30:51.799 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 385.0413ms
2025-07-22 23:30:51.800 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:30:51.801 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 395.3473ms
2025-07-22 23:30:52.878 +05:30 [INF] Executed DbCommand (336ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:30:52.883 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:30:52.885 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 5766.2419ms
2025-07-22 23:30:52.887 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:30:52.887 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:30:52.888 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 6974.1479ms
2025-07-22 23:30:52.889 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:30:52.892 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:30:52.893 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:30:53.195 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:30:53.201 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:30:53.204 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 309.7105ms
2025-07-22 23:30:53.206 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:30:53.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 319.562ms
2025-07-22 23:31:36.752 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - null null
2025-07-22 23:31:36.761 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:36.762 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/add-time-slot - 204 null null 12.367ms
2025-07-22 23:31:36.763 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - application/json 100
2025-07-22 23:31:36.766 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:36.767 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 23:31:36.776 +05:30 [INF] Route matched with {action = "AddTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddTimeSlot(wellness_studio_Application.DTOs.TimeSlotDto) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:31:39.596 +05:30 [INF] Executed DbCommand (343ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Boolean), @p3='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [TimeSlots] ([Date], [EndTime], [IsAvailable], [StartTime])
OUTPUT INSERTED.[TimeSlotId]
VALUES (@p0, @p1, @p2, @p3);
2025-07-22 23:31:39.616 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[wellness_studio_Domain.Entities.TimeSlot, wellness-studio-Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:31:39.624 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API) in 2845.8005ms
2025-07-22 23:31:39.625 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.AddTimeSlot (wellness-studio-API)'
2025-07-22 23:31:39.626 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/admin/add-time-slot - 200 186 application/json; charset=utf-8 2863.1972ms
2025-07-22 23:31:39.632 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:31:39.632 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:31:39.634 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:39.635 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:39.636 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 4.7026ms
2025-07-22 23:31:39.641 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:31:39.637 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 5.3617ms
2025-07-22 23:31:39.642 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:31:39.648 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:39.652 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:31:39.653 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:31:39.654 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:31:39.654 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:31:39.655 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:31:39.998 +05:30 [INF] Executed DbCommand (340ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:31:40.000 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:31:40.001 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 344.661ms
2025-07-22 23:31:40.002 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:31:40.003 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 363.0553ms
2025-07-22 23:31:40.011 +05:30 [INF] Executed DbCommand (351ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:31:40.014 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:31:40.016 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 358.6148ms
2025-07-22 23:31:40.017 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:31:40.018 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 376.8919ms
2025-07-22 23:38:18.517 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:18.522 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:18.522 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:18.533 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:18.537 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.539 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.541 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.544 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 32.3376ms
2025-07-22 23:38:18.551 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 30.1384ms
2025-07-22 23:38:18.545 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 24.3368ms
2025-07-22 23:38:18.543 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:18.551 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:18.567 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 35.2734ms
2025-07-22 23:38:18.569 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.573 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:18.576 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:18.576 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:18.577 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:18.577 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:20.542 +05:30 [INF] Executed DbCommand (283ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:38:20.545 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:20.546 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 1966.5065ms
2025-07-22 23:38:20.547 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:20.548 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:20.548 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 1997.7851ms
2025-07-22 23:38:20.551 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:20.554 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:20.555 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:20.889 +05:30 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:38:20.895 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:20.897 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 340.9535ms
2025-07-22 23:38:20.898 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:20.899 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 350.9447ms
2025-07-22 23:38:22.227 +05:30 [INF] Executed DbCommand (321ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:38:22.231 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:22.233 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 3655.0715ms
2025-07-22 23:38:22.235 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:22.235 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:22.236 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 3685.1675ms
2025-07-22 23:38:22.239 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:22.241 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:22.241 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:23.118 +05:30 [INF] Executed DbCommand (875ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:38:23.125 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:23.127 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 884.1538ms
2025-07-22 23:38:23.129 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:23.130 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 894.8689ms
2025-07-22 23:38:44.230 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:44.233 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.233 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:44.235 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 5.2535ms
2025-07-22 23:38:44.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:44.234 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:44.243 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.233 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:44.252 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.254 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.254 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 21.2289ms
2025-07-22 23:38:44.257 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:44.257 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 23.4374ms
2025-07-22 23:38:44.256 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.259 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:44.260 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:44.264 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 30.7459ms
2025-07-22 23:38:44.266 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.272 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:44.273 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:44.586 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:38:44.587 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:38:44.588 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:44.589 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:44.589 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 322.011ms
2025-07-22 23:38:44.590 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 316.5365ms
2025-07-22 23:38:44.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:38:44.591 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:38:44.592 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:44.592 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:44.594 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.595 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:38:44.596 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 354.425ms
2025-07-22 23:38:44.597 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 338.3654ms
2025-07-22 23:38:44.597 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:44.598 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:44.602 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:44.603 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:38:44.920 +05:30 [INF] Executed DbCommand (313ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:38:44.920 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:38:44.926 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:44.929 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:38:44.931 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 325.1021ms
2025-07-22 23:38:44.934 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 329.7141ms
2025-07-22 23:38:44.934 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:38:44.935 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:38:44.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 344.2992ms
2025-07-22 23:38:44.936 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 345.6584ms
2025-07-22 23:40:05.072 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:05.076 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:05.077 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:05.085 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:05.092 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.093 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.097 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 29.1223ms
2025-07-22 23:40:05.101 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 25.0526ms
2025-07-22 23:40:05.094 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.096 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.103 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:05.112 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 35.4756ms
2025-07-22 23:40:05.113 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 27.9856ms
2025-07-22 23:40:05.113 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:05.115 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.121 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:05.121 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:05.122 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:05.122 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:05.123 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:07.435 +05:30 [INF] Executed DbCommand (2,307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:07.439 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:07.446 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 2320.1108ms
2025-07-22 23:40:07.451 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:07.451 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:07.453 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:07.453 +05:30 [INF] Executed DbCommand (2,327ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:07.453 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 2340.0529ms
2025-07-22 23:40:07.454 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:07.456 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:07.457 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:07.459 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2334.4455ms
2025-07-22 23:40:07.459 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:07.460 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:07.463 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:07.464 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 2360.4081ms
2025-07-22 23:40:07.464 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:07.467 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:07.754 +05:30 [INF] Executed DbCommand (294ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:07.757 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:07.758 +05:30 [INF] Executed DbCommand (289ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:07.758 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 299.2674ms
2025-07-22 23:40:07.761 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:07.761 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:07.763 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 294.4158ms
2025-07-22 23:40:07.763 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 312.5369ms
2025-07-22 23:40:07.764 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:07.766 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 307.026ms
2025-07-22 23:40:09.941 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:09.944 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:09.945 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:09.947 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:09.948 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:09.949 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:09.950 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:09.950 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:10.261 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:10.268 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:10.271 +05:30 [INF] Executed DbCommand (315ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:10.273 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:10.272 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 320.3676ms
2025-07-22 23:40:10.274 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:10.276 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:10.277 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:10.278 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 324.649ms
2025-07-22 23:40:10.279 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:10.279 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:10.279 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 338.7596ms
2025-07-22 23:40:10.280 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:10.282 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:10.282 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:10.285 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 341.5781ms
2025-07-22 23:40:10.286 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:10.291 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:10.578 +05:30 [INF] Executed DbCommand (285ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:10.578 +05:30 [INF] Executed DbCommand (290ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:10.583 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:10.585 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:10.586 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 294.4604ms
2025-07-22 23:40:10.588 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 301.4894ms
2025-07-22 23:40:10.590 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:10.592 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:10.593 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 314.5476ms
2025-07-22 23:40:10.594 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 321.0316ms
2025-07-22 23:40:36.634 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:36.642 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:36.642 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:36.642 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:36.652 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.654 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.659 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 24.6551ms
2025-07-22 23:40:36.660 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 18.2655ms
2025-07-22 23:40:36.656 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.658 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.663 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:36.665 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:36.675 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 32.6315ms
2025-07-22 23:40:36.675 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 33.3391ms
2025-07-22 23:40:36.677 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.679 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:36.685 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:36.685 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:36.686 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:36.687 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:36.994 +05:30 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:36.997 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:36.998 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 310.3874ms
2025-07-22 23:40:36.999 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:37.000 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:37.001 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 337.8268ms
2025-07-22 23:40:37.002 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:37.005 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:37.006 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:37.009 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:37.011 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:37.012 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 322.2671ms
2025-07-22 23:40:37.013 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:37.013 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:37.015 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:37.016 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 350.4034ms
2025-07-22 23:40:37.016 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:37.019 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:37.314 +05:30 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:37.316 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:37.317 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 309.8474ms
2025-07-22 23:40:37.318 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:37.319 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 319.4208ms
2025-07-22 23:40:37.345 +05:30 [INF] Executed DbCommand (324ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:37.349 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:37.350 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 329.6609ms
2025-07-22 23:40:37.351 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:37.352 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 338.6646ms
2025-07-22 23:40:40.131 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:40.134 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:40.135 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:40.135 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:40.137 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:40.138 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:40.139 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:40.140 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:40.574 +05:30 [INF] Executed DbCommand (433ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:40.576 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:40.577 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 437.7247ms
2025-07-22 23:40:40.578 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:40:40.578 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:40.581 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 450.6013ms
2025-07-22 23:40:40.581 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:40.584 +05:30 [INF] Executed DbCommand (441ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:40.584 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:40.586 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:40.586 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:40.587 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 445.1237ms
2025-07-22 23:40:40.588 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:40:40.589 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:40.592 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:40:40.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 457.8421ms
2025-07-22 23:40:40.593 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:40.596 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:40:40.871 +05:30 [INF] Executed DbCommand (282ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:40:40.873 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:40.874 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 286.0079ms
2025-07-22 23:40:40.876 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:40:40.877 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 298.2923ms
2025-07-22 23:40:40.880 +05:30 [INF] Executed DbCommand (283ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:40:40.883 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:40:40.885 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 288.1129ms
2025-07-22 23:40:40.885 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:40:40.886 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 298.4589ms
2025-07-22 23:41:34.323 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:34.328 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:34.328 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:34.331 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:34.341 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.343 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.348 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 25.0656ms
2025-07-22 23:41:34.348 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 20.0309ms
2025-07-22 23:41:34.355 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:34.345 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.347 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.361 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.362 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 33.5022ms
2025-07-22 23:41:34.363 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 31.7082ms
2025-07-22 23:41:34.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:34.366 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:34.370 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.371 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:34.372 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:34.374 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:34.677 +05:30 [INF] Executed DbCommand (303ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:34.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:34.682 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 308.4727ms
2025-07-22 23:41:34.683 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:34.684 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:34.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 330.2892ms
2025-07-22 23:41:34.686 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.689 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:34.690 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:34.693 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:34.696 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:34.697 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 321.6131ms
2025-07-22 23:41:34.699 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:34.699 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:34.700 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 336.6921ms
2025-07-22 23:41:34.702 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:34.705 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:34.706 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:35.000 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:35.002 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:35.003 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 311.4017ms
2025-07-22 23:41:35.004 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:35.005 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 321.3286ms
2025-07-22 23:41:35.015 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:35.017 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:35.018 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 310.9707ms
2025-07-22 23:41:35.019 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:35.020 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 320.6719ms
2025-07-22 23:41:41.175 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:41.176 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:41.176 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:41.177 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:41.178 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.180 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.183 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.187 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 10.7384ms
2025-07-22 23:41:41.190 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:41.185 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.186 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 10.9ms
2025-07-22 23:41:41.188 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.9656ms
2025-07-22 23:41:41.196 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:41.202 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.202 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 25.8196ms
2025-07-22 23:41:41.209 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.211 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:41.213 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:41.214 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:41.214 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:41.517 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:41.519 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:41.520 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 304.3576ms
2025-07-22 23:41:41.522 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:41.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:41.523 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 333.3557ms
2025-07-22 23:41:41.525 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.528 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:41.529 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:41.540 +05:30 [INF] Executed DbCommand (320ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:41.542 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:41.543 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 325.8269ms
2025-07-22 23:41:41.544 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:41.544 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:41.546 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:41.547 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 351.3054ms
2025-07-22 23:41:41.548 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:41.551 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:41.839 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:41.847 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:41.849 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 318.5732ms
2025-07-22 23:41:41.851 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:41.852 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 330.1305ms
2025-07-22 23:41:41.858 +05:30 [INF] Executed DbCommand (306ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:41.860 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:41.861 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 308.6524ms
2025-07-22 23:41:41.862 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:41.863 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 318.8426ms
2025-07-22 23:41:44.892 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:44.894 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:44.894 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:44.896 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:44.897 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:44.898 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:44.898 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:44.899 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:45.194 +05:30 [INF] Executed DbCommand (293ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:45.196 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:45.197 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 296.5159ms
2025-07-22 23:41:45.198 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:45.198 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:45.200 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:45.201 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 309.5554ms
2025-07-22 23:41:45.202 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:45.205 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:45.210 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:45.212 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:45.213 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 311.6922ms
2025-07-22 23:41:45.214 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:45.214 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:45.215 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 321.8328ms
2025-07-22 23:41:45.217 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:45.221 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:45.221 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:45.499 +05:30 [INF] Executed DbCommand (292ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:45.501 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:45.502 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 296.0628ms
2025-07-22 23:41:45.503 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:45.504 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 305.8103ms
2025-07-22 23:41:45.531 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:45.533 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:45.534 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 311.2369ms
2025-07-22 23:41:45.535 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:45.536 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 321.9307ms
2025-07-22 23:41:48.355 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:48.357 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.357 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:48.357 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:48.358 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:48.358 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.2902ms
2025-07-22 23:41:48.359 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:48.360 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.362 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.365 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.369 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.369 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 11.9463ms
2025-07-22 23:41:48.372 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:48.371 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 13.3995ms
2025-07-22 23:41:48.371 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 13.9382ms
2025-07-22 23:41:48.373 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:48.375 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:48.382 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.384 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:48.386 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:48.684 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:48.685 +05:30 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:48.686 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:48.687 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:48.689 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:48.688 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 304.5826ms
2025-07-22 23:41:48.689 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 301.2077ms
2025-07-22 23:41:48.690 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:48.691 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.692 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:48.693 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:48.695 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:48.696 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:48.696 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 337.1364ms
2025-07-22 23:41:48.697 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 324.1115ms
2025-07-22 23:41:48.698 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:48.698 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:48.705 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:49.002 +05:30 [INF] Executed DbCommand (295ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:49.011 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:49.015 +05:30 [INF] Executed DbCommand (305ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:49.016 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 310.0907ms
2025-07-22 23:41:49.022 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:49.022 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:49.023 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 314.8848ms
2025-07-22 23:41:49.024 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 334.8231ms
2025-07-22 23:41:49.025 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:49.028 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 337.8124ms
2025-07-22 23:41:53.376 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:53.378 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.378 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 2.6427ms
2025-07-22 23:41:53.380 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:53.382 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.383 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:53.384 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:53.435 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:53.437 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.438 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 3.4622ms
2025-07-22 23:41:53.438 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:53.439 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:53.443 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.444 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.445 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.0896ms
2025-07-22 23:41:53.446 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:53.449 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:53.704 +05:30 [INF] Executed DbCommand (318ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:53.705 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:53.706 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 321.1796ms
2025-07-22 23:41:53.708 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:41:53.708 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:53.709 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.710 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 329.8468ms
2025-07-22 23:41:53.710 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:53.713 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:53.762 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:53.768 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:53.769 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 319.1864ms
2025-07-22 23:41:53.771 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:41:53.771 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:53.773 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:41:53.774 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 334.6606ms
2025-07-22 23:41:53.775 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:53.777 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:41:54.001 +05:30 [INF] Executed DbCommand (287ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:41:54.004 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:54.005 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 291.3284ms
2025-07-22 23:41:54.006 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:41:54.007 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 299.6231ms
2025-07-22 23:41:54.082 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:41:54.083 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:41:54.084 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 305.2598ms
2025-07-22 23:41:54.085 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:41:54.086 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 315.6746ms
2025-07-22 23:42:06.437 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:06.439 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.440 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.029ms
2025-07-22 23:42:06.441 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:06.444 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.445 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:06.446 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:06.510 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:06.510 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:06.514 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.516 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.517 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 6.706ms
2025-07-22 23:42:06.518 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 7.4221ms
2025-07-22 23:42:06.520 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:06.528 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.529 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:06.530 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:06.775 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:42:06.777 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:06.778 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 331.1268ms
2025-07-22 23:42:06.779 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:06.780 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:06.782 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.783 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 341.706ms
2025-07-22 23:42:06.783 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:06.786 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:06.854 +05:30 [INF] Executed DbCommand (321ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:42:06.856 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:06.857 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 325.5334ms
2025-07-22 23:42:06.858 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:06.859 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:06.860 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:06.861 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 341.6723ms
2025-07-22 23:42:06.862 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:06.864 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:07.082 +05:30 [INF] Executed DbCommand (294ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:42:07.084 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:07.086 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 298.803ms
2025-07-22 23:42:07.087 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:07.088 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 308.7827ms
2025-07-22 23:42:07.164 +05:30 [INF] Executed DbCommand (298ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:42:07.166 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:07.167 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 302.1081ms
2025-07-22 23:42:07.168 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:07.169 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 310.6035ms
2025-07-22 23:42:18.331 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:18.333 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.333 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:18.333 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:18.333 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:18.334 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.4355ms
2025-07-22 23:42:18.336 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:18.337 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.339 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.341 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.345 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.345 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 12.1661ms
2025-07-22 23:42:18.346 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 12.6547ms
2025-07-22 23:42:18.347 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 13.3568ms
2025-07-22 23:42:18.348 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:18.348 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:18.357 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.358 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:18.358 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:18.361 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:18.663 +05:30 [INF] Executed DbCommand (302ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:42:18.671 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:18.672 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 312.6075ms
2025-07-22 23:42:18.674 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:42:18.674 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:18.676 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.677 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 341.0405ms
2025-07-22 23:42:18.677 +05:30 [INF] Executed DbCommand (313ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:42:18.677 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:18.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:18.681 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:18.682 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 318.9211ms
2025-07-22 23:42:18.683 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:42:18.684 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:18.687 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:42:18.688 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 340.1137ms
2025-07-22 23:42:18.688 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:18.691 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:42:18.988 +05:30 [INF] Executed DbCommand (304ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:42:18.988 +05:30 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:42:18.990 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:18.991 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:42:18.992 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 308.5285ms
2025-07-22 23:42:18.993 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 300.7149ms
2025-07-22 23:42:18.994 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:42:18.995 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:42:18.996 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 322.0874ms
2025-07-22 23:42:18.997 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 314.0621ms
2025-07-22 23:45:37.856 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - null null
2025-07-22 23:45:37.856 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - null null
2025-07-22 23:45:37.856 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - null null
2025-07-22 23:45:37.856 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - null null
2025-07-22 23:45:37.866 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.866 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.868 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.873 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - 204 null null 17.0261ms
2025-07-22 23:45:37.877 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - 204 null null 19.9889ms
2025-07-22 23:45:37.869 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.870 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - 204 null null 14.0537ms
2025-07-22 23:45:37.890 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/refresh-token - application/json 63
2025-07-22 23:45:37.889 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/refresh-token - 204 null null 33.7046ms
2025-07-22 23:45:37.873 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/refresh-token - application/json 63
2025-07-22 23:45:37.876 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/refresh-token - application/json 63
2025-07-22 23:45:37.881 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/refresh-token - application/json 63
2025-07-22 23:45:37.894 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.897 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.899 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.901 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:37.902 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:37.902 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:37.902 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:37.903 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:37.918 +05:30 [INF] Route matched with {action = "RefreshToken", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(wellness_studio_Application.DTOs.RefreshTokenDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:45:37.918 +05:30 [INF] Route matched with {action = "RefreshToken", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(wellness_studio_Application.DTOs.RefreshTokenDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:45:37.918 +05:30 [INF] Route matched with {action = "RefreshToken", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(wellness_studio_Application.DTOs.RefreshTokenDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:45:37.918 +05:30 [INF] Route matched with {action = "RefreshToken", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshToken(wellness_studio_Application.DTOs.RefreshTokenDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:45:38.348 +05:30 [INF] Executed DbCommand (363ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [r].[Id], [r].[ExpiryDate], [r].[Token], [r].[UserId]
FROM [RefreshTokens] AS [r]
WHERE [r].[Token] = @__refreshToken_0
2025-07-22 23:45:38.366 +05:30 [INF] Executed DbCommand (381ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [r].[Id], [r].[ExpiryDate], [r].[Token], [r].[UserId]
FROM [RefreshTokens] AS [r]
WHERE [r].[Token] = @__refreshToken_0
2025-07-22 23:45:38.687 +05:30 [INF] Executed DbCommand (310ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__userId_0
2025-07-22 23:45:38.689 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__userId_0
2025-07-22 23:45:39.074 +05:30 [INF] Executed DbCommand (353ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:45:39.091 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:45:39.094 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API) in 1173.0961ms
2025-07-22 23:45:39.095 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:39.095 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/refresh-token - 200 455 application/json; charset=utf-8 1214.6815ms
2025-07-22 23:45:39.098 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:45:39.100 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:39.101 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 2.8285ms
2025-07-22 23:45:39.103 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:45:39.105 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:39.112 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:39 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:45:39.186 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:39 PM'.
2025-07-22 23:45:39.188 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:45:39.193 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:45:39.194 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 91.361ms
2025-07-22 23:45:40.096 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [r].[Id], [r].[ExpiryDate], [r].[Token], [r].[UserId]
FROM [RefreshTokens] AS [r]
WHERE [r].[Token] = @__refreshToken_0
2025-07-22 23:45:40.096 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [r].[Id], [r].[ExpiryDate], [r].[Token], [r].[UserId]
FROM [RefreshTokens] AS [r]
WHERE [r].[Token] = @__refreshToken_0
2025-07-22 23:45:40.407 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__userId_0
2025-07-22 23:45:40.408 +05:30 [INF] Executed DbCommand (307ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[UserId] = @__userId_0
2025-07-22 23:45:40.743 +05:30 [INF] Executed DbCommand (334ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:45:40.746 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:45:40.747 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API) in 2827.1645ms
2025-07-22 23:45:40.748 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:40.749 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/refresh-token - 200 455 application/json; charset=utf-8 2858.3051ms
2025-07-22 23:45:40.767 +05:30 [INF] Executed DbCommand (355ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:45:40.768 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:45:40.769 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API) in 2847.5686ms
2025-07-22 23:45:40.770 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:40.771 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/refresh-token - 200 455 application/json; charset=utf-8 2894.8772ms
2025-07-22 23:45:41.699 +05:30 [INF] Executed DbCommand (290ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:45:41.704 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType2`2[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:45:41.705 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API) in 3782.204ms
2025-07-22 23:45:41.706 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.RefreshToken (wellness-studio-API)'
2025-07-22 23:45:41.707 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/refresh-token - 200 455 application/json; charset=utf-8 3833.4719ms
2025-07-22 23:45:50.125 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:45:50.125 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:45:50.126 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:45:50.129 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.131 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.133 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.133 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 8.0938ms
2025-07-22 23:45:50.135 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:45:50.134 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 8.9698ms
2025-07-22 23:45:50.135 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 9.0824ms
2025-07-22 23:45:50.135 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:45:50.139 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.145 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.146 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:45:50.147 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:45:50.148 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
2025-07-22 23:45:50.149 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
2025-07-22 23:45:50.150 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:45:50.151 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:45:50.151 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:45:50.152 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:45:50.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 401 0 null 17.9695ms
2025-07-22 23:45:50.154 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:45:50.153 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 18.7561ms
2025-07-22 23:45:50.157 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:45:50.160 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
   at Microsoft.IdentityModel.Tokens.ValidatorUtilities.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-07-22 23:45:50.162 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '7/22/2025 4:04:21 PM', Current time (UTC): '7/22/2025 6:15:50 PM'.
2025-07-22 23:45:50.162 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-07-22 23:45:50.163 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-07-22 23:45:50.163 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 401 0 null 9.3367ms
2025-07-22 23:46:13.959 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/auth/login - null null
2025-07-22 23:46:13.971 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:13.971 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/auth/login - 204 null null 13.0247ms
2025-07-22 23:46:13.973 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7264/api/auth/login - application/json 42
2025-07-22 23:46:13.976 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:13.977 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:46:13.981 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(wellness_studio_Application.DTOs.LoginDto) on controller wellness_studio_API.Controllers.AuthController (wellness-studio-API).
2025-07-22 23:46:19.282 +05:30 [INF] Executed DbCommand (304ms) [Parameters=[@__username_0='?' (Size = 4000), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Email], [u].[Password], [u].[Role], [u].[Username]
FROM [Users] AS [u]
WHERE [u].[Username] = @__username_0 AND [u].[Password] = @__password_1
2025-07-22 23:46:19.635 +05:30 [INF] Executed DbCommand (349ms) [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (Size = 4000), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [RefreshTokens] ([ExpiryDate], [Token], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2025-07-22 23:46:19.639 +05:30 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-07-22 23:46:19.641 +05:30 [INF] Executed action wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API) in 5659.1279ms
2025-07-22 23:46:19.642 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AuthController.Login (wellness-studio-API)'
2025-07-22 23:46:19.643 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7264/api/auth/login - 200 546 application/json; charset=utf-8 5670.7025ms
2025-07-22 23:46:32.309 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:46:32.310 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:46:32.309 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:46:32.310 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:46:32.332 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.334 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.336 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.338 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.338 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 28.7469ms
2025-07-22 23:46:32.339 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 29.193ms
2025-07-22 23:46:32.339 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 29.9303ms
2025-07-22 23:46:32.340 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:46:32.340 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 30.2563ms
2025-07-22 23:46:32.341 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:46:32.355 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.359 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.360 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:46:32.361 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:46:32.361 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:46:32.362 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:46:32.652 +05:30 [INF] Executed DbCommand (285ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:46:32.657 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:46:32.660 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 296.738ms
2025-07-22 23:46:32.661 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:46:32.661 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:46:32.663 +05:30 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:46:32.663 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.664 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 324.0355ms
2025-07-22 23:46:32.666 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:46:32.666 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:46:32.669 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 305.1085ms
2025-07-22 23:46:32.670 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:46:32.670 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:46:32.671 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:46:32.673 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:46:32.675 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 334.4567ms
2025-07-22 23:46:32.677 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:46:32.680 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:46:32.957 +05:30 [INF] Executed DbCommand (282ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:46:32.957 +05:30 [INF] Executed DbCommand (275ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:46:32.959 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:46:32.960 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:46:32.961 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 287.0675ms
2025-07-22 23:46:32.962 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 281.2425ms
2025-07-22 23:46:32.963 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:46:32.964 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:46:32.965 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 166 application/json; charset=utf-8 304.0512ms
2025-07-22 23:46:32.966 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 295.7183ms
2025-07-22 23:49:18.987 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/cancel-appointment/2 - null null
2025-07-22 23:49:18.994 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:18.994 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/cancel-appointment/2 - 204 null null 6.9831ms
2025-07-22 23:49:18.995 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/cancel-appointment/2 - null null
2025-07-22 23:49:19.000 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:19.002 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.CancelAppointment (wellness-studio-API)'
2025-07-22 23:49:19.010 +05:30 [INF] Route matched with {action = "CancelAppointment", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelAppointment(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:49:19.393 +05:30 [INF] Executed DbCommand (346ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
WHERE [a].[AppointmentId] = @__id_0
2025-07-22 23:49:19.710 +05:30 [INF] Executed DbCommand (308ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 23:49:20.410 +05:30 [INF] Executed DbCommand (325ms) [Parameters=[@p0='?' (DbType = Int32), @p2='?' (DbType = Int32), @p1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Appointments]
OUTPUT 1
WHERE [AppointmentId] = @p0;
UPDATE [TimeSlots] SET [IsAvailable] = @p1
OUTPUT 1
WHERE [TimeSlotId] = @p2;
2025-07-22 23:49:20.765 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 23:49:20.767 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.CancelAppointment (wellness-studio-API) in 1756.0416ms
2025-07-22 23:49:20.768 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.CancelAppointment (wellness-studio-API)'
2025-07-22 23:49:20.768 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/cancel-appointment/2 - 200 null text/plain; charset=utf-8 1773.1749ms
2025-07-22 23:49:20.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:49:20.772 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:49:20.774 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:20.775 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:20.776 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 3.8259ms
2025-07-22 23:49:20.782 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:49:20.777 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 5.046ms
2025-07-22 23:49:20.777 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:49:20.789 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:20.792 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:49:20.792 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:49:20.793 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:49:20.793 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:49:20.794 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:49:21.124 +05:30 [INF] Executed DbCommand (327ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:49:21.126 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:49:21.126 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 331.4961ms
2025-07-22 23:49:21.127 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:49:21.128 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 2 application/json; charset=utf-8 346.1481ms
2025-07-22 23:49:21.132 +05:30 [INF] Executed DbCommand (334ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:49:21.133 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:49:21.134 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 338.3111ms
2025-07-22 23:49:21.135 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:49:21.136 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 358.6996ms
2025-07-22 23:55:24.018 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:55:24.041 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:55:24.040 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:55:24.044 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:55:24.052 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.052 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.053 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.056 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 39.588ms
2025-07-22 23:55:24.056 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 15.4366ms
2025-07-22 23:55:24.059 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 44.0261ms
2025-07-22 23:55:24.055 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.061 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:55:24.061 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:55:24.096 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 52.8365ms
2025-07-22 23:55:24.099 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.100 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.106 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:55:24.106 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:55:24.108 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:55:24.108 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:55:24.431 +05:30 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:55:24.435 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:55:24.436 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 326.734ms
2025-07-22 23:55:24.438 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:55:24.438 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:55:24.440 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:24.440 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 2 application/json; charset=utf-8 379.2739ms
2025-07-22 23:55:24.441 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:55:24.443 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:55:24.733 +05:30 [INF] Executed DbCommand (288ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:55:24.737 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:55:24.738 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 294.3116ms
2025-07-22 23:55:24.739 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:55:24.740 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 2 application/json; charset=utf-8 302.1856ms
2025-07-22 23:55:26.372 +05:30 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:55:26.382 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:55:26.387 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2276.2743ms
2025-07-22 23:55:26.389 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:55:26.390 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:55:26.394 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:55:26.395 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 2334.2062ms
2025-07-22 23:55:26.396 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:55:26.399 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:55:26.692 +05:30 [INF] Executed DbCommand (291ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:55:26.695 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:55:26.696 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 296.1091ms
2025-07-22 23:55:26.697 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:55:26.698 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 133 application/json; charset=utf-8 309.5833ms
2025-07-22 23:57:00.204 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/13 - null null
2025-07-22 23:57:00.210 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:00.211 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/delete-time-slot/13 - 204 null null 6.3323ms
2025-07-22 23:57:00.215 +05:30 [INF] Request starting HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/13 - null null
2025-07-22 23:57:00.219 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:00.220 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 23:57:00.225 +05:30 [INF] Route matched with {action = "DeleteTimeSlot", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteTimeSlot(Int32) on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:57:02.305 +05:30 [INF] Executed DbCommand (316ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[TimeSlotId] = @__id_0
2025-07-22 23:57:02.633 +05:30 [INF] Executed DbCommand (322ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [TimeSlots]
OUTPUT 1
WHERE [TimeSlotId] = @p0;
2025-07-22 23:57:02.636 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2025-07-22 23:57:02.637 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API) in 2411.1704ms
2025-07-22 23:57:02.638 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.DeleteTimeSlot (wellness-studio-API)'
2025-07-22 23:57:02.639 +05:30 [INF] Request finished HTTP/2 DELETE https://localhost:7264/api/admin/delete-time-slot/13 - 200 null text/plain; charset=utf-8 2424.4095ms
2025-07-22 23:57:02.644 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:57:02.644 +05:30 [INF] Request starting HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:57:02.648 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:02.650 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:02.650 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/booked-appointments - 204 null null 6.5373ms
2025-07-22 23:57:02.652 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - null null
2025-07-22 23:57:02.651 +05:30 [INF] Request finished HTTP/2 OPTIONS https://localhost:7264/api/admin/available-slots - 204 null null 7.1092ms
2025-07-22 23:57:02.652 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7264/api/admin/available-slots - null null
2025-07-22 23:57:02.658 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:02.662 +05:30 [INF] CORS policy execution successful.
2025-07-22 23:57:02.663 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:57:02.663 +05:30 [INF] Executing endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:57:02.664 +05:30 [INF] Route matched with {action = "GetAllBookedAppointments", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllBookedAppointments() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:57:02.664 +05:30 [INF] Route matched with {action = "GetAvailableSlots", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAvailableSlots() on controller wellness_studio_API.Controllers.AdminController (wellness-studio-API).
2025-07-22 23:57:02.975 +05:30 [INF] Executed DbCommand (309ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AppointmentId], [a].[AppointmentDate], [a].[ClientEmail], [a].[ClientName], [a].[Status], [a].[TimeSlotId], [a].[UserId], [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [Appointments] AS [a]
INNER JOIN [TimeSlots] AS [t] ON [a].[TimeSlotId] = [t].[TimeSlotId]
2025-07-22 23:57:02.978 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.AppointmentDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:57:02.979 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API) in 313.1495ms
2025-07-22 23:57:02.980 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAllBookedAppointments (wellness-studio-API)'
2025-07-22 23:57:02.980 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/booked-appointments - 200 2 application/json; charset=utf-8 328.5078ms
2025-07-22 23:57:04.753 +05:30 [INF] Executed DbCommand (320ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[TimeSlotId], [t].[Date], [t].[EndTime], [t].[IsAvailable], [t].[StartTime]
FROM [TimeSlots] AS [t]
WHERE [t].[IsAvailable] = CAST(1 AS bit) AND [t].[Date] >= GETDATE()
ORDER BY [t].[Date]
2025-07-22 23:57:04.755 +05:30 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[wellness_studio_Application.DTOs.TimeSlotDto, wellness-studio-Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-07-22 23:57:04.755 +05:30 [INF] Executed action wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API) in 2087.9368ms
2025-07-22 23:57:04.756 +05:30 [INF] Executed endpoint 'wellness_studio_API.Controllers.AdminController.GetAvailableSlots (wellness-studio-API)'
2025-07-22 23:57:04.757 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7264/api/admin/available-slots - 200 2 application/json; charset=utf-8 2104.3922ms
